{
    "type": [
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        3,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages, index = 595,",
        "+ ",
        "          random.method = \"ht\", model = \"pool\", inst.method = \"baltagi\")",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  insufficient number of instruments\n",
        "> ",
        "ht <- plm(lwage ~ wks + south + smsa + married + exp + I(exp ^ 2) + ",
        "+ ",
        "              bluecol + ind + union + sex + black + ed |",
        "+ ",
        "              bluecol + south + smsa + ind + sex + black |",
        "+ ",
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages, index = 595,",
        "+ ",
        "          random.method = \"ht\", model = \"pooling\", inst.method = \"baltagi\")",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  insufficient number of instruments\n",
        "> ",
        "ht <- plm(lwage ~ wks + south + smsa + married + exp + I(exp ^ 2) + ",
        "+ ",
        "              bluecol + ind + union + sex + black + ed |",
        "+ ",
        "              bluecol + south + smsa + ind + sex + black |",
        "+ ",
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages, index = 595,",
        "+ ",
        "           model = \"pooling\")",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  insufficient number of instruments\n",
        "> ",
        "ht <- lm(lwage ~ wks + south + smsa + married + exp + I(exp ^ 2) + ",
        "+ ",
        "              bluecol + ind + union + sex + black + ed |",
        "+ ",
        "              bluecol + south + smsa + ind + sex + black |",
        "+ ",
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages)",
        "Error in lm.fit(x, y, offset = offset, singular.ok = singular.ok, ...) : \n  0 (non-NA) cases\nIn addition: There were 13 warnings (use warnings() to see them)\n",
        "> ",
        "warnings()",
        "Warning messages:\n1: In Ops.factor(wks, south) : ‘+’ not meaningful for factors\n2: In Ops.factor(wks + south, smsa) : ‘+’ not meaningful for factors\n3: In Ops.factor(wks + south + smsa, married) : ‘+’ not meaningful for factors\n4: In Ops.factor(wks + south + smsa + married + exp + I(exp^2),  ... :\n  ‘+’ not meaningful for factors\n5: In Ops.factor(wks + south + smsa + married + exp + I(exp^2) +  ... :\n  ‘+’ not meaningful for factors\n6: In Ops.factor(wks + south + smsa + married + exp + I",
        "(exp^2) +  ... :\n  ‘+’ not meaningful for factors\n7: In Ops.factor(wks + south + smsa + married + exp + I(exp^2) +  ... :\n  ‘+’ not meaningful for factors\n8: In Ops.factor(bluecol, south) : ‘+’ not meaningful for factors\n9: In Ops.factor(bluecol + south, smsa) : ‘+’ not meaningful for factors\n10: In Ops.factor(bluecol + south + smsa + ind, sex) :\n  ‘+’ not meaningful for factors\n11: In Ops.factor(bluecol + south + smsa + ind + sex, black) :\n  ‘+’ not meaningful for factors\n12: In Ops",
        ".factor(wks, married) : ‘+’ not meaningful for factors\n13: In Ops.factor(wks + married, union) : ‘+’ not meaningful for factors\n",
        "> ",
        "ht <- plm(lwage ~ wks + south + smsa + married + exp + I(exp ^ 2) + ",
        "+ ",
        "              bluecol + ind + union + sex + black + ed |",
        "+ ",
        "              bluecol + south + smsa + ind + sex + black |",
        "+ ",
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages, index = 595,",
        "+ ",
        "          random.method = \"ht\", model = \"random\", inst.method = \"baltagi\")",
        "> ",
        "summary(ht)",
        "Oneway (individual) effect Random Effect Model \n   (Hausman-Taylor's transformation)\nInstrumental variable estimation\n   (Baltagi's transformation)\n\nCall:\nplm(formula = lwage ~ wks + south + smsa + married + exp + I(exp^2) + \n    bluecol + ind + union + sex + black + ed | bluecol + south + \n    smsa + ind + sex + black | wks + married + union + exp + \n    I(exp^2), data = Wages, model = \"random\", random.method = \"ht\", \n    inst.method = \"baltagi\", index = 595)\n\nBalanced Panel: n = 595, T = 7, N = 4165\n\nEffe",
        "cts:\n                  var std.dev share\nidiosyncratic 0.02304 0.15180 0.025\nindividual    0.88699 0.94180 0.975\ntheta: 0.9392\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-12.643736  -0.466002   0.043285   0.524739  13.340263 \n\nCoefficients:\n               Estimate  Std. Error z-value  Pr(>|z|)    \n(Intercept)  2.9127e+00  2.8365e-01 10.2687 < 2.2e-16 ***\nwks          8.3740e-04  5.9973e-04  1.3963   0.16263    \nsouthyes     7.4398e-03  3.1955e-02  0.2328   0.81590    \nsmsayes     -4",
        ".1833e-02  1.8958e-02 -2.2066   0.02734 *  \nmarriedyes  -2.9851e-02  1.8980e-02 -1.5728   0.11578    \nexp          1.1313e-01  2.4710e-03 45.7851 < 2.2e-16 ***\nI(exp^2)    -4.1886e-04  5.4598e-05 -7.6718 1.696e-14 ***\nbluecolyes  -2.0705e-02  1.3781e-02 -1.5024   0.13299    \nind          1.3604e-02  1.5237e-02  0.8928   0.37196    \nunionyes     3.2771e-02  1.4908e-02  2.1982   0.02794 *  \nsexfemale   -1.3092e-01  1.2666e-01 -1.0337   0.30129    \nblackyes    -2.8575e-01  1.5570e-01 -1.8352   0.06647 .  \ned  ",
        "         1.3794e-01  2.1248e-02  6.4919 8.474e-11 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nTotal Sum of Squares:    243.04\nResidual Sum of Squares: 4163.6\nR-Squared:      0.60945\nAdj. R-Squared: 0.60833\nChisq: 6891.87 on 12 DF, p-value: < 2.22e-16\n",
        "> ",
        "?print.lm",
        "> ",
        "print.lm",
        "Error: object 'print.lm' not found\n",
        "> ",
        "print.summary.lm",
        "Error: object 'print.summary.lm' not found\n",
        "> ",
        "?print.summary.lm",
        "> ",
        "summary",
        "function (object, ...) \nUseMethod(\"summary\")\n<bytecode: 0x0000029006744918>\n<environment: namespace:base>\n",
        "> ",
        "?t.test",
        "\nRestarting R session...\n\n",
        "\nRestarting R session...\n\n",
        "> ",
        "x <- hsiao(dca ~ flr, pdata.frame(dataset, index=c(\"unit\", \"year\")))",
        "> ",
        "x",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: dca ~ flr\n\n    Hypothesis  F-statistic   p-value  \n  1     H1        1.1457     0.35",
        "17437 \n  2     H2        0.8017     0.5907017 \n  3     H3        1.5350     0.1788930 \n",
        "> ",
        "getAnywhere(summary.lm)",
        "A single object matching ‘summary.lm’ was found\nIt was found in the following places\n  package:stats\n  registered S3 method for summary from namespace stats\n  namespace:stats\nwith value\n\nfunction (object, correlation = FALSE, symbolic.cor = FALSE, \n    ...) \n{\n    z <- object\n    p <- z$rank\n    rdf <- z$df.residual\n    if (p == 0) {\n        r <- z$residuals\n        n <- length(r)\n        w <- z$weights\n        if (is.null(w)) {\n            rss <- sum(r^2)\n        }\n        else {\n            rss <- sum",
        "(w * r^2)\n            r <- sqrt(w) * r\n        }\n        resvar <- rss/rdf\n        ans <- z[c(\"call\", \"terms\", if (!is.null(z$weights)) \"weights\")]\n        class(ans) <- \"summary.lm\"\n        ans$aliased <- is.na(coef(object))\n        ans$residuals <- r\n        ans$df <- c(0L, n, length(ans$aliased))\n        ans$coefficients <- matrix(NA_real_, 0L, 4L, dimnames = list(NULL, \n            c(\"Estimate\", \"Std. Error\", \"t value\", \"Pr(>|t|)\")))\n        ans$sigma <- sqrt(resvar)\n        ans$r.squared <- ans$adj.r.s",
        "quared <- 0\n        ans$cov.unscaled <- matrix(NA_real_, 0L, 0L)\n        if (correlation) \n            ans$correlation <- ans$cov.unscaled\n        return(ans)\n    }\n    if (is.null(z$terms)) \n        stop(\"invalid 'lm' object:  no 'terms' component\")\n    if (!inherits(object, \"lm\")) \n        warning(\"calling summary.lm(<fake-lm-object>) ...\")\n    Qr <- qr.lm(object)\n    n <- NROW(Qr$qr)\n    if (is.na(z$df.residual) || n - p != z$df.residual) \n        warning(\"residual degrees of freedom in object suggest th",
        "is is not an \\\"lm\\\" fit\")\n    r <- z$residuals\n    f <- z$fitted.values\n    if (!is.null(z$offset)) {\n        f <- f - z$offset\n    }\n    w <- z$weights\n    if (is.null(w)) {\n        mss <- if (attr(z$terms, \"intercept\")) \n            sum((f - mean(f))^2)\n        else sum(f^2)\n        rss <- sum(r^2)\n    }\n    else {\n        mss <- if (attr(z$terms, \"intercept\")) {\n            m <- sum(w * f/sum(w))\n            sum(w * (f - m)^2)\n        }\n        else sum(w * f^2)\n        rss <- sum(w * r^2)\n        r <- s",
        "qrt(w) * r\n    }\n    resvar <- rss/rdf\n    if (is.finite(resvar) && resvar < (mean(f)^2 + var(c(f))) * \n        1e-30) \n        warning(\"essentially perfect fit: summary may be unreliable\")\n    p1 <- 1L:p\n    R <- chol2inv(Qr$qr[p1, p1, drop = FALSE])\n    se <- sqrt(diag(R) * resvar)\n    est <- z$coefficients[Qr$pivot[p1]]\n    tval <- est/se\n    ans <- z[c(\"call\", \"terms\", if (!is.null(z$weights)) \"weights\")]\n    ans$residuals <- r\n    ans$coefficients <- cbind(Estimate = est, `Std. Error` = se, \n        `t",
        " value` = tval, `Pr(>|t|)` = 2 * pt(abs(tval), rdf, \n            lower.tail = FALSE))\n    ans$aliased <- is.na(z$coefficients)\n    ans$sigma <- sqrt(resvar)\n    ans$df <- c(p, rdf, NCOL(Qr$qr))\n    if (p != attr(z$terms, \"intercept\")) {\n        df.int <- if (attr(z$terms, \"intercept\")) \n            1L\n        else 0L\n        ans$r.squared <- mss/(mss + rss)\n        ans$adj.r.squared <- 1 - (1 - ans$r.squared) * ((n - \n            df.int)/rdf)\n        ans$fstatistic <- c(value = (mss/(p - df.int))/resvar, \n ",
        "           numdf = p - df.int, dendf = rdf)\n    }\n    else ans$r.squared <- ans$adj.r.squared <- 0\n    ans$cov.unscaled <- R\n    dimnames(ans$cov.unscaled) <- dimnames(ans$coefficients)[c(1, \n        1)]\n    if (correlation) {\n        ans$correlation <- (R * resvar)/outer(se, se)\n        dimnames(ans$correlation) <- dimnames(ans$cov.unscaled)\n        ans$symbolic.cor <- symbolic.cor\n    }\n    if (!is.null(z$na.action)) \n        ans$na.action <- z$na.action\n    class(ans) <- \"summary.lm\"\n    ans\n}\n<bytecode:",
        " 0x000001c6cee02ab8>\n<environment: namespace:stats>\n",
        "> ",
        "getAnywhere(print.summary.lm)",
        "A single object matching ‘print.summary.lm’ was found\nIt was found in the following places\n  registered S3 method for print from namespace stats\n  namespace:stats\nwith value\n\nfunction (x, digits = max(3L, getOption(\"digits\") - 3L), symbolic.cor = x$symbolic.cor, \n    signif.stars = getOption(\"show.signif.stars\"), ...) \n{\n    cat(\"\\nCall:\\n\", paste(deparse(x$call), sep = \"\\n\", collapse = \"\\n\"), \n        \"\\n\\n\", sep = \"\")\n    resid <- x$residuals\n    df <- x$df\n    rdf <- df[2L]\n    cat(if (!is.null(x$wei",
        "ghts) && diff(range(x$weights))) \n        \"Weighted \", \"Residuals:\\n\", sep = \"\")\n    if (rdf > 5L) {\n        nam <- c(\"Min\", \"1Q\", \"Median\", \"3Q\", \"Max\")\n        rq <- if (length(dim(resid)) == 2L) \n            structure(apply(t(resid), 1L, quantile), dimnames = list(nam, \n                dimnames(resid)[[2L]]))\n        else {\n            zz <- zapsmall(quantile(resid), digits + 1L)\n            structure(zz, names = nam)\n        }\n        print(rq, digits = digits, ...)\n    }\n    else if (rdf > 0L) {\n      ",
        "  print(resid, digits = digits, ...)\n    }\n    else {\n        cat(\"ALL\", df[1L], \"residuals are 0: no residual degrees of freedom!\")\n        cat(\"\\n\")\n    }\n    if (length(x$aliased) == 0L) {\n        cat(\"\\nNo Coefficients\\n\")\n    }\n    else {\n        if (nsingular <- df[3L] - df[1L]) \n            cat(\"\\nCoefficients: (\", nsingular, \" not defined because of singularities)\\n\", \n                sep = \"\")\n        else cat(\"\\nCoefficients:\\n\")\n        coefs <- x$coefficients\n        if (any(aliased <- x$aliased",
        ")) {\n            cn <- names(aliased)\n            coefs <- matrix(NA, length(aliased), 4, dimnames = list(cn, \n                colnames(coefs)))\n            coefs[!aliased, ] <- x$coefficients\n        }\n        printCoefmat(coefs, digits = digits, signif.stars = signif.stars, \n            na.print = \"NA\", ...)\n    }\n    cat(\"\\nResidual standard error:\", format(signif(x$sigma, \n        digits)), \"on\", rdf, \"degrees of freedom\")\n    cat(\"\\n\")\n    if (nzchar(mess <- naprint(x$na.action))) \n        cat(\"  (\", m",
        "ess, \")\\n\", sep = \"\")\n    if (!is.null(x$fstatistic)) {\n        cat(\"Multiple R-squared: \", formatC(x$r.squared, digits = digits))\n        cat(\",\\tAdjusted R-squared: \", formatC(x$adj.r.squared, \n            digits = digits), \"\\nF-statistic:\", formatC(x$fstatistic[1L], \n            digits = digits), \"on\", x$fstatistic[2L], \"and\", \n            x$fstatistic[3L], \"DF,  p-value:\", format.pval(pf(x$fstatistic[1L], \n                x$fstatistic[2L], x$fstatistic[3L], lower.tail = FALSE), \n                digits =",
        " digits))\n        cat(\"\\n\")\n    }\n    correl <- x$correlation\n    if (!is.null(correl)) {\n        p <- NCOL(correl)\n        if (p > 1L) {\n            cat(\"\\nCorrelation of Coefficients:\\n\")\n            if (is.logical(symbolic.cor) && symbolic.cor) {\n                print(symnum(correl, abbr.colnames = NULL))\n            }\n            else {\n                correl <- format(round(correl, 2), nsmall = 2, \n                  digits = digits)\n                correl[!lower.tri(correl)] <- \"\"\n                print",
        "(correl[-1, -p, drop = FALSE], quote = FALSE)\n            }\n        }\n    }\n    cat(\"\\n\")\n    invisible(x)\n}\n<bytecode: 0x000001c6cfda9f70>\n<environment: namespace:stats>\n",
        "> ",
        "printCoefmat",
        "function (x, digits = max(3L, getOption(\"digits\") - 2L), signif.stars = getOption(\"show.signif.stars\"), \n    signif.legend = signif.stars, dig.tst = max(1L, min(5L, digits - \n        1L)), cs.ind = 1:k, tst.ind = k + 1, zap.ind = integer(), \n    P.values = NULL, has.Pvalue = nc >= 4L && length(cn <- colnames(x)) && \n        substr(cn[nc], 1L, 3L) %in% c(\"Pr(\", \"p-v\"), eps.Pvalue = .Machine$double.eps, \n    na.print = \"NA\", quote = FALSE, right = TRUE, ...) \n{\n    if (is.null(d <- dim(x)) || length(d) != 2L)",
        " \n        stop(\"'x' must be coefficient matrix/data frame\")\n    nc <- d[2L]\n    if (is.null(P.values)) {\n        scp <- getOption(\"show.coef.Pvalues\")\n        if (!is.logical(scp) || is.na(scp)) {\n            warning(\"option \\\"show.coef.Pvalues\\\" is invalid: assuming TRUE\")\n            scp <- TRUE\n        }\n        P.values <- has.Pvalue && scp\n    }\n    else if (P.values && !has.Pvalue) \n        stop(\"'P.values' is TRUE, but 'has.Pvalue' is not\")\n    if (has.Pvalue && !P.values) {\n        d <- dim(xm <- da",
        "ta.matrix(x[, -nc, drop = FALSE]))\n        nc <- nc - 1\n        has.Pvalue <- FALSE\n    }\n    else xm <- data.matrix(x)\n    k <- nc - has.Pvalue - (if (missing(tst.ind)) \n        1\n    else length(tst.ind))\n    if (!missing(cs.ind) && length(cs.ind) > k) \n        stop(\"wrong k / cs.ind\")\n    Cf <- array(\"\", dim = d, dimnames = dimnames(xm))\n    ok <- !(ina <- is.na(xm))\n    for (i in zap.ind) xm[, i] <- zapsmall(xm[, i], digits)\n    if (length(cs.ind)) {\n        acs <- abs(coef.se <- xm[, cs.ind, drop = FAL",
        "SE])\n        if (any(ia <- is.finite(acs))) {\n            digmin <- 1 + if (length(acs <- acs[ia & acs != 0])) \n                floor(log10(range(acs[acs != 0], finite = TRUE)))\n            else 0\n            Cf[, cs.ind] <- format(round(coef.se, max(1L, digits - \n                digmin)), digits = digits)\n        }\n    }\n    if (length(tst.ind)) \n        Cf[, tst.ind] <- format(round(xm[, tst.ind], digits = dig.tst), \n            digits = digits)\n    if (any(r.ind <- !((1L:nc) %in% c(cs.ind, tst.ind, if (h",
        "as.Pvalue) nc)))) \n        for (i in which(r.ind)) Cf[, i] <- format(xm[, i], digits = digits)\n    ok[, tst.ind] <- FALSE\n    okP <- if (has.Pvalue) \n        ok[, -nc]\n    else ok\n    x1 <- Cf[okP]\n    dec <- getOption(\"OutDec\")\n    if (dec != \".\") \n        x1 <- chartr(dec, \".\", x1)\n    x0 <- (xm[okP] == 0) != (as.numeric(x1) == 0)\n    if (length(not.both.0 <- which(x0 & !is.na(x0)))) {\n        Cf[okP][not.both.0] <- format(xm[okP][not.both.0], digits = max(1L, \n            digits - 1L))\n    }\n    if (any(",
        "ina)) \n        Cf[ina] <- na.print\n    if (any(inan <- is.nan(xm))) \n        Cf[inan] <- \"NaN\"\n    if (P.values) {\n        if (!is.logical(signif.stars) || is.na(signif.stars)) {\n            warning(\"option \\\"show.signif.stars\\\" is invalid: assuming TRUE\")\n            signif.stars <- TRUE\n        }\n        if (any(okP <- ok[, nc])) {\n            pv <- as.vector(xm[, nc])\n            Cf[okP, nc] <- format.pval(pv[okP], digits = dig.tst, \n                eps = eps.Pvalue)\n            signif.stars <- signif.st",
        "ars && any(pv[okP] < 0.1)\n            if (signif.stars) {\n                Signif <- symnum(pv, corr = FALSE, na = FALSE, \n                  cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), \n                  symbols = c(\"***\", \"**\", \"*\", \".\", \" \"))\n                Cf <- cbind(Cf, format(Signif))\n            }\n        }\n        else signif.stars <- FALSE\n    }\n    else signif.stars <- FALSE\n    print.default(Cf, quote = quote, right = right, na.print = na.print, \n        ...)\n    if (signif.stars && signif.legen",
        "d) {\n        if ((w <- getOption(\"width\")) < nchar(sleg <- attr(Signif, \n            \"legend\"))) \n            sleg <- strwrap(sleg, width = w - 2, prefix = \"  \")\n        cat(\"---\\nSignif. codes:  \", sleg, sep = \"\", fill = w + \n            4 + max(nchar(sleg, \"bytes\") - nchar(sleg)))\n    }\n    invisible(x)\n}\n<bytecode: 0x000001c6cfe11090>\n<environment: namespace:stats>\n",
        "> ",
        "x$p.value",
        "[1] 0.3517437 0.5907017 0.1788930\n",
        "> ",
        "printCoefmat(x$p.value)",
        "Error in printCoefmat(x$p.value) : \n  'x' must be coefficient matrix/data frame\n",
        "> ",
        "?printCoefmat",
        "> ",
        "cmat <- cbind(rnorm(3, 10), sqrt(rchisq(3, 12)))",
        "> ",
        "cmat <- cbind(cmat, cmat[, 1]/cmat[, 2])",
        "> ",
        "cmat <- cbind(cmat, 2*pnorm(-cmat[, 3]))",
        "> ",
        "colnames(cmat) <- c(\"Estimate\", \"Std.Err\", \"Z value\", \"Pr(>z)\")",
        "> ",
        "cmat",
        "      Estimate  Std.Err  Z value       Pr(>z)\n[1,] 10.540787 3.662726 2.877853 4.003914e-03\n[2,] 11.065024 2.100975 5.266615 1.389624e-07\n[3,]  8.943499 2.197525 4.069804 4.705265e-05\n",
        "> ",
        "printCoefmat(cmat[, 1:3])",
        "     Estimate Std.Err Z value\n[1,]  10.5408  3.6627  2.8779\n[2,]  11.0650  2.1010  5.2666\n[3,]   8.9435  2.1975  4.0698\n",
        "> ",
        "printCoefmat(cmat[, 1])",
        "Error in printCoefmat(cmat[, 1]) : \n  'x' must be coefficient matrix/data frame\n",
        "> ",
        "printCoefmat(as.matrix(cmat[, 1]))",
        "     [,1]   \n[1,] 10.5408\n[2,] 11.0650\n[3,]  8.9435\n\nRestarting R session...\n\n",
        "> ",
        "x <- hsiao(dca ~ flr, pdata.frame(dataset, index=c(\"unit\", \"year\")))",
        "> ",
        "x",
        "     [,1]  \n[1,] 0.3517\n[2,] 0.5907\n[3,] 0.1789\n   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: dca ~ flr\n\n    Hypothesis  F-statist",
        "ic   p-value  \n  1     H1        1.1457     0.3517437 \n  2     H2        0.8017     0.5907017 \n  3     H3        1.5350     0.1788930 \n",
        "> ",
        "x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "print(x)",
        "     [,1]\n[1,]    0\n[2,]    0\n[3,]    0\n   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    ",
        "Hypothesis    F-statistic     p-value    \n  1      H1         129.3166    4.006194e-172\n  2      H2          27.3352     1.440452e-80\n  3      H3          83.9608    4.735764e-107\n",
        "> ",
        "getOption(\"digits\")",
        "[1] 7\n\nRestarting R session...\n\n",
        "> ",
        "x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "print(x)",
        "     [,1]\n[1,]    0\n[2,]    0\n[3,]    0\n   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    ",
        "Hypothesis    F-statistic     p-value    \n  1      H1         129.3166    4.006194e-172\n  2      H2          27.3352     1.440452e-80\n  3      H3          83.9608    4.735764e-107\n",
        "> ",
        "> ",
        "x$p.value",
        "[1] 4.006194e-172  1.440452e-80 4.735764e-107\n\nRestarting R session...\n\n",
        "> ",
        "x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "print(x)",
        "     [,1]\n[1,]    0\n[2,]    0\n[3,]    0\n   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    ",
        "Hypothesis    F-statistic     p-value    \n  1      H1         129.3166    4.006194e-172\n  2      H2          27.3352     1.440452e-80\n  3      H3          83.9608    4.735764e-107\n\nRestarting R session...\n\n",
        "> ",
        "x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "print(x)",
        "     [,1]\n[1,]    0\n[2,]    0\n[3,]    0\n   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    ",
        "Hypothesis    F-statistic     p-value    \n  1      H1         129.3166    4.006194e-172\n  2      H2          27.3352     1.440452e-80\n  3      H3          83.9608    4.735764e-107\n",
        "> ",
        "Coefmat",
        "Error: object 'Coefmat' not found\n",
        "> ",
        "printCoefmat",
        "function (x, digits = max(3L, getOption(\"digits\") - 2L), signif.stars = getOption(\"show.signif.stars\"), \n    signif.legend = signif.stars, dig.tst = max(1L, min(5L, digits - \n        1L)), cs.ind = 1:k, tst.ind = k + 1, zap.ind = integer(), \n    P.values = NULL, has.Pvalue = nc >= 4L && length(cn <- colnames(x)) && \n        substr(cn[nc], 1L, 3L) %in% c(\"Pr(\", \"p-v\"), eps.Pvalue = .Machine$double.eps, \n    na.print = \"NA\", quote = FALSE, right = TRUE, ...) \n{\n    if (is.null(d <- dim(x)) || length(d) != 2L)",
        " \n        stop(\"'x' must be coefficient matrix/data frame\")\n    nc <- d[2L]\n    if (is.null(P.values)) {\n        scp <- getOption(\"show.coef.Pvalues\")\n        if (!is.logical(scp) || is.na(scp)) {\n            warning(\"option \\\"show.coef.Pvalues\\\" is invalid: assuming TRUE\")\n            scp <- TRUE\n        }\n        P.values <- has.Pvalue && scp\n    }\n    else if (P.values && !has.Pvalue) \n        stop(\"'P.values' is TRUE, but 'has.Pvalue' is not\")\n    if (has.Pvalue && !P.values) {\n        d <- dim(xm <- da",
        "ta.matrix(x[, -nc, drop = FALSE]))\n        nc <- nc - 1\n        has.Pvalue <- FALSE\n    }\n    else xm <- data.matrix(x)\n    k <- nc - has.Pvalue - (if (missing(tst.ind)) \n        1\n    else length(tst.ind))\n    if (!missing(cs.ind) && length(cs.ind) > k) \n        stop(\"wrong k / cs.ind\")\n    Cf <- array(\"\", dim = d, dimnames = dimnames(xm))\n    ok <- !(ina <- is.na(xm))\n    for (i in zap.ind) xm[, i] <- zapsmall(xm[, i], digits)\n    if (length(cs.ind)) {\n        acs <- abs(coef.se <- xm[, cs.ind, drop = FAL",
        "SE])\n        if (any(ia <- is.finite(acs))) {\n            digmin <- 1 + if (length(acs <- acs[ia & acs != 0])) \n                floor(log10(range(acs[acs != 0], finite = TRUE)))\n            else 0\n            Cf[, cs.ind] <- format(round(coef.se, max(1L, digits - \n                digmin)), digits = digits)\n        }\n    }\n    if (length(tst.ind)) \n        Cf[, tst.ind] <- format(round(xm[, tst.ind], digits = dig.tst), \n            digits = digits)\n    if (any(r.ind <- !((1L:nc) %in% c(cs.ind, tst.ind, if (h",
        "as.Pvalue) nc)))) \n        for (i in which(r.ind)) Cf[, i] <- format(xm[, i], digits = digits)\n    ok[, tst.ind] <- FALSE\n    okP <- if (has.Pvalue) \n        ok[, -nc]\n    else ok\n    x1 <- Cf[okP]\n    dec <- getOption(\"OutDec\")\n    if (dec != \".\") \n        x1 <- chartr(dec, \".\", x1)\n    x0 <- (xm[okP] == 0) != (as.numeric(x1) == 0)\n    if (length(not.both.0 <- which(x0 & !is.na(x0)))) {\n        Cf[okP][not.both.0] <- format(xm[okP][not.both.0], digits = max(1L, \n            digits - 1L))\n    }\n    if (any(",
        "ina)) \n        Cf[ina] <- na.print\n    if (any(inan <- is.nan(xm))) \n        Cf[inan] <- \"NaN\"\n    if (P.values) {\n        if (!is.logical(signif.stars) || is.na(signif.stars)) {\n            warning(\"option \\\"show.signif.stars\\\" is invalid: assuming TRUE\")\n            signif.stars <- TRUE\n        }\n        if (any(okP <- ok[, nc])) {\n            pv <- as.vector(xm[, nc])\n            Cf[okP, nc] <- format.pval(pv[okP], digits = dig.tst, \n                eps = eps.Pvalue)\n            signif.stars <- signif.st",
        "ars && any(pv[okP] < 0.1)\n            if (signif.stars) {\n                Signif <- symnum(pv, corr = FALSE, na = FALSE, \n                  cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), \n                  symbols = c(\"***\", \"**\", \"*\", \".\", \" \"))\n                Cf <- cbind(Cf, format(Signif))\n            }\n        }\n        else signif.stars <- FALSE\n    }\n    else signif.stars <- FALSE\n    print.default(Cf, quote = quote, right = right, na.print = na.print, \n        ...)\n    if (signif.stars && signif.legen",
        "d) {\n        if ((w <- getOption(\"width\")) < nchar(sleg <- attr(Signif, \n            \"legend\"))) \n            sleg <- strwrap(sleg, width = w - 2, prefix = \"  \")\n        cat(\"---\\nSignif. codes:  \", sleg, sep = \"\", fill = w + \n            4 + max(nchar(sleg, \"bytes\") - nchar(sleg)))\n    }\n    invisible(x)\n}\n<bytecode: 0x00000184f9a0f408>\n<environment: namespace:stats>\n",
        "> ",
        "x",
        "     [,1]\n[1,]    0\n[2,]    0\n[3,]    0\n   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    ",
        "Hypothesis    F-statistic     p-value    \n  1      H1         129.3166    4.006194e-172\n  2      H2          27.3352     1.440452e-80\n  3      H3          83.9608    4.735764e-107\n",
        "> ",
        "x$p.value",
        "[1] 4.006194e-172  1.440452e-80 4.735764e-107\n",
        "> ",
        "printCoefmat(as.matrix(x$p.value), digits = digits,",
        "+ ",
        "                                  signif.stars = signif.stars, ...)",
        "Error: '...' used in an incorrect context\n",
        "> ",
        "digits = max(3L, getOption(\"digits\") - 3L)",
        "> ",
        "signif.stars = getOption(\"show.signif.stars\")",
        "> ",
        "printCoefmat(as.matrix(x$p.value), digits = digits,",
        "+ ",
        "                                  signif.stars = signif.stars",
        "+ ",
        ")",
        "     [,1]\n[1,]    0\n[2,]    0\n[3,]    0\n",
        "> ",
        "printCoefmat(cmat[, 1:3])",
        "     Estimate Std.Err Z value\n[1,]  10.5408  3.6627  2.8779\n[2,]  11.0650  2.1010  5.2666\n[3,]   8.9435  2.1975  4.0698\n",
        "> ",
        "cmat <- cmat / 1e6",
        "> ",
        "printCoefmat(cmat[, 1:3])",
        "       Estimate    Std.Err Z value\n[1,] 1.0541e-05 3.6627e-06       0\n[2,] 1.1065e-05 2.1010e-06       0\n[3,] 8.9435e-06 2.1975e-06       0\n",
        "> ",
        "library(lme4)",
        "Loading required package: Matrix\n",
        "> ",
        "data(Orthodont,package=\"nlme\")",
        "> ",
        "model <-lmer(distance ~ Sex + age + (age|Subject), data=Orthodont)",
        "> ",
        "> ",
        "library(multcomp)",
        "Error in library(multcomp) : there is no package called ‘multcomp’\n",
        "> ",
        "install.packages(\"multcomp\")",
        "Installing package into ‘C:/Users/Administrator/AppData/Local/R/win-library/4.4’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘mvtnorm’, ‘TH.data’\n\n",
        "\n  There is a binary version available but the source version is later:\n        binary source needs_compilation\nmvtnorm  1.3-2  1.3-3              TRUE\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.4/TH.data_1.1-2.zip'\nContent type 'application/zip' length 8827730 bytes (8.4 MB)\ndownloaded 8.4 MB\n\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.4/multcomp_1.4-26.zip'\nContent type 'application/zip' length 736686 bytes (719 KB)\ndownloaded 719 KB\n\n",
        "package ‘TH.data’ successfully unpacked and MD5 sums checked\npackage ‘multcomp’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Administrator\\AppData\\Local\\Temp\\RtmpAhQm7e\\downloaded_packages\n",
        "installing the source package ‘mvtnorm’\n\ntrying URL 'https://cran.rstudio.com/src/contrib/mvtnorm_1.3-3.tar.gz'\nContent type 'application/x-gzip' length 837946 bytes (818 KB)\ndownloaded 818 KB\n\n",
        "* installing *source* package 'mvtnorm' ...\n** package 'mvtnorm' successfully unpacked and MD5 sums checked\n** using staged installation\n** libs\nusing C compiler: 'gcc.exe (GCC) 13.2.0'\nusing Fortran compiler: 'GNU Fortran (GCC) 13.2.0'\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c C_FORTRAN_interface.c -o C_FORTRAN_interface.o\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools",
        "44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c lpmvnorm.c -o lpmvnorm.o\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c ltMatrices.c -o ltMatrices.o\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c miwa.c -o miwa.o\ngfortran      -O2",
        "  -mfpmath=sse -msse2 -mstackrealign  -c mvt.f -o mvt.o\ngcc  -I\"C:/PROGRA~1/R/R-44~1.2/include\" -DNDEBUG     -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c mvtnorm-init.c -o mvtnorm-init.o\ngfortran      -O2  -mfpmath=sse -msse2 -mstackrealign  -c tvpack.f -o tvpack.o\ngcc -shared -s -static-libgcc -o mvtnorm.dll tmp.def C_FORTRAN_interface.o lpmvnorm.o ltMatrices.o miwa.o mvt.o mvtnorm-init.o tvpack.o -LC:/PROGRA~1/R/R-44~1.2/bin/x64 -lRlapack -L",
        "C:/PROGRA~1/R/R-44~1.2/bin/x64 -lRblas -lgfortran -lm -lquadmath -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib -lgfortran -lm -lquadmath -LC:/PROGRA~1/R/R-44~1.2/bin/x64 -lR\ninstalling to C:/Users/Administrator/AppData/Local/R/win-library/4.4/00LOCK-mvtnorm/00new/mvtnorm/libs/x64\n** R\n** inst\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** installing vignettes\n** testing if insta",
        "lled package can be loaded from temporary location\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (mvtnorm)\n",
        "\nThe downloaded source packages are in\n\t‘C:\\Users\\Administrator\\AppData\\Local\\Temp\\RtmpAhQm7e\\downloaded_packages’\n",
        "\nRestarting R session...\n\n",
        "> ",
        "x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "print(x)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    Hypothesis  F-statistic   p-value  \n  1 ",
        "    H1       129.3166     < 0.001  \n  2     H2        27.3352     < 0.001  \n  3     H3        83.9608     < 0.001  \n",
        "> ",
        "EmplUK",
        "Error: object 'EmplUK' not found\n",
        "> ",
        "data(\"EmplUK\", package=\"plm\")",
        "> ",
        "EmplUK",
        "    firm year sector       emp    wage capital   output\n1      1 1977      7  5.041000 13.1516  0.5894  95.7072\n2      1 1978      7  5.600000 12.3018  0.6318  97.3569\n3      1 1979      7  5.015000 12.8395  0.6771  99.6083\n4      1 1980      7  4.715000 13.8039  0.6171 100.5501\n5      1 1981      7  4.093000 14.2897  0.5076  99.5581\n6      1 1982      7  3.166000 14.8681  0.4229  98.6151\n7      1 1983      7  2.936000 13.7784  0.3920 100.0301\n8      2 1977      7 71.319000 14.7909 16.9363  95.7072\n9      2",
        " 1978      7 70.642998 14.1036 17.2422  97.3569\n10     2 1979      7 70.917999 14.9534 17.5413  99.6083\n11     2 1980      7 72.030998 15.4910 17.6574 100.5501\n12     2 1981      7 73.689003 16.1969 16.7133  99.5581\n13     2 1982      7 72.418999 16.1314 16.2469  98.6151\n14     2 1983      7 68.517998 16.3051 17.3696 100.0301\n15     3 1977      7 19.156000 22.6920  7.0975  95.7072\n16     3 1978      7 19.440001 20.6938  6.9469  97.3569\n17     3 1979      7 19.900000 21.2048  6.8565  99.6083\n18     3 1980   ",
        "   7 20.240000 22.1970  6.6547 100.5501\n19     3 1981      7 19.570000 24.8714  6.2136  99.5581\n20     3 1982      7 18.125000 24.8447  5.7146  98.6151\n21     3 1983      7 16.850000 28.9077  7.3431 100.0301\n22     4 1977      8 26.160000 14.8283  8.4902 118.2223\n23     4 1978      8 26.740000 14.8379  8.7420 120.1551\n24     4 1979      8 27.280001 14.8756  9.1869 118.8319\n25     4 1980      8 27.830000 15.2332  9.4036 111.9164\n26     4 1981      8 27.169001 17.2529  8.8939  97.5540\n27     4 1982      8 24.",
        "504000 19.3142  8.3905  92.1982\n28     4 1983      8 22.562000 20.0055  7.4351  92.4041\n29     5 1976      7 86.677002 20.6323 22.3804  94.8991\n30     5 1977      7 87.099998 18.2782 22.2703  96.5038\n31     5 1978      7 87.000000 18.1369 25.1670  98.8163\n32     5 1979      7 90.400002 18.1896 25.3515 100.4835\n33     5 1980      7 89.199997 19.2893 28.2394 100.1223\n34     5 1981      7 82.699997 19.8242 25.7959  98.5270\n35     5 1982      7 73.699997 19.3873 20.3681  99.5083\n36     6 1976      3  0.748000 2",
        "3.1889  0.1694 102.7724\n37     6 1977      3  0.766000 20.5393  0.1618 107.0270\n38     6 1978      3  0.762000 20.9387  0.1499 108.6788\n39     6 1979      3  0.729000 21.7626  0.1458 111.1190\n40     6 1980      3  0.731000 23.4707  0.1468 101.9265\n41     6 1981      3  0.779000 24.1252  0.1412  99.4971\n42     6 1982      3  0.782000 25.2065  0.1261  99.3103\n43     7 1976      3  1.600000 30.8513  0.9934 104.7664\n44     7 1977      3  1.650000 28.5550  0.9330 107.4791\n45     7 1978      3  1.680000 29.8602  ",
        "0.9650 108.9188\n46     7 1979      3  1.680000 30.5894  0.9629 111.5591\n47     7 1980      3  1.660000 27.4886  0.9224 100.0000\n48     7 1981      3  1.560000 31.4868  0.9992  99.3965\n49     7 1982      3  1.540000 32.0728  0.8802  99.2931\n50     8 1976      3  9.145001 30.9089  4.5486 104.7664\n51     8 1977      3 10.855000 24.4679  4.6194 107.4791\n52     8 1978      3 10.749000 28.0558  5.0373 108.9188\n53     8 1979      3 10.959000 28.7445  4.8748 111.5591\n54     8 1980      3 10.698000 28.4854  3.2221 1",
        "00.0000\n55     8 1981      3  8.174000 31.7356  2.8343  99.3965\n56     8 1982      3  4.701000 29.8963  1.7506  99.2931\n57     9 1976      3  2.006000 26.0825  0.3824 102.7724\n58     9 1977      3  2.656000 21.9545  0.4551 107.0270\n59     9 1978      3  2.712000 22.8100  0.4529 108.6788\n60     9 1979      3  2.744000 23.3720  0.4524 111.1190\n61     9 1980      3  2.757000 23.0737  0.4676 101.9265\n62     9 1981      3  2.849000 24.3044  0.4810  99.4971\n63     9 1982      3  2.752000 26.8984  0.4753  99.3103\n",
        "64    10 1976      7  3.823000 23.3533  1.1293  95.3657\n65    10 1977      7  3.935000 21.3251  1.0143  96.7315\n66    10 1978      7  3.528000 20.9319  1.1169  99.2333\n67    10 1979      7  3.520000 20.4536  1.1626 100.7335\n68    10 1980      7  3.467000 23.4946  1.0827 100.0000\n69    10 1981      7  3.090000 25.9553  1.0636  98.2324\n70    10 1982      7  3.262000 26.0361  1.0958  99.7635\n71    11 1976      3  1.359000 23.0614  0.4099 104.7664\n72    11 1977      3  1.346000 20.2275  0.5741 107.4791\n73    11",
        " 1978      3  1.338000 22.1435  0.5563 108.9188\n74    11 1979      3  1.353000 22.5496  0.5145 111.5591\n75    11 1980      3  1.264000 22.5875  0.5895 100.0000\n76    11 1981      3  1.158000 25.9585  0.4847  99.3965\n77    11 1982      3  1.175000 24.0345  0.4359  99.2931\n78    12 1976      3  1.780000 34.2991  0.2569 104.7664\n79    12 1977      3  1.643000 30.3979  0.2072 107.4791\n80    12 1978      3  1.390000 31.1431  0.1999 108.9188\n81    12 1979      3  1.350000 33.3105  0.2007 111.5591\n82    12 1980   ",
        "   3  1.082000 30.2147  0.1473 100.0000\n83    12 1981      3  0.780000 29.7414  0.1158  99.3965\n84    12 1982      3  0.680000 31.1235  0.1036  99.2931\n85    13 1976      1  2.353000 22.3833  0.5785 125.8064\n86    13 1977      1  2.386000 23.0607  0.5613 127.9649\n87    13 1978      1  2.375000 23.4931  0.5273 125.4294\n88    13 1979      1  2.415000 26.0042  0.5180 125.0259\n89    13 1980      1  2.266000 24.1671  0.4608 106.3044\n90    13 1981      1  1.777000 26.0573  0.3750  98.0729\n91    13 1982      1  1.",
        "537000 28.7064  0.3147  96.8674\n92    14 1978      1  3.165000 20.9113  0.3902 127.3866\n93    14 1979      1  3.096000 21.8887  0.4311 124.6424\n94    14 1980      1  2.991000 23.7010  0.4228 118.9132\n95    14 1981      1  2.692000 21.3925  0.3810  99.3576\n96    14 1982      1  2.175000 25.5237  0.3051  97.2428\n97    14 1983      1  1.801000 25.7211  0.2041  97.1944\n98    14 1984      1  1.428000 25.6452  0.1685  99.9862\n99    15 1977      9  7.220000 22.5898  1.8498 105.3355\n100   15 1978      9  7.321000 2",
        "2.0549  1.9215 108.1833\n101   15 1979      9  7.097000 22.2902  2.1855 110.6984\n102   15 1980      9  7.201000 20.6808  2.4345 105.9673\n103   15 1981      9  6.602000 21.6151  2.1255  96.5931\n104   15 1982      9  5.311000 23.1551  1.5594  92.0013\n105   15 1983      9  5.394000 25.0999  1.3576  92.2488\n106   16 1976      4  2.757000 29.3517  0.9175 116.4000\n107   16 1977      4  2.632000 27.0686  0.8613 115.7000\n108   16 1978      4  2.647000 27.2752  0.8519 112.8000\n109   16 1979      4  2.687000 26.6444  ",
        "0.5277 108.9000\n110   16 1980      4  2.417000 25.3591  0.5262 100.0000\n111   16 1981      4  2.218000 25.2731  0.5660  89.2000\n112   16 1982      4  2.106000 27.4446  0.5112  90.5000\n113   17 1977      1  1.090000 23.9352  0.1282 127.1640\n114   17 1978      1  1.144000 22.6139  0.1393 127.3866\n115   17 1979      1  1.195000 23.0801  0.1795 124.6424\n116   17 1980      1  1.259000 25.0346  0.1835 118.9132\n117   17 1981      1  1.319000 24.2587  0.1731  99.3576\n118   17 1982      1  1.188000 28.4659  0.1471  ",
        "97.2428\n119   17 1983      1  1.163000 29.4594  0.1246  97.1944\n120   18 1977      4  7.407000 29.9689  1.1694 116.2250\n121   18 1978      4  7.392000 26.2611  1.2643 114.9750\n122   18 1979      4  7.198000 25.7528  1.3536 111.8250\n123   18 1980      4  6.872000 24.3198  1.5672 106.6750\n124   18 1981      4  6.131000 24.3181  1.3429  97.3000\n125   18 1982      4  5.785000 26.5473  1.1385  89.5250\n126   18 1983      4  5.487000 26.5930  0.9603  89.6000\n127   19 1976      4 23.531000 34.0204  5.4762 116.4000\n",
        "128   19 1977      4 22.521000 30.3191  5.0656 115.7000\n129   19 1978      4 21.865999 29.1920  5.0976 112.8000\n130   19 1979      4 21.066999 28.6365  5.7196 108.9000\n131   19 1980      4 19.238001 29.7144  4.9972 100.0000\n132   19 1981      4 16.247999 31.3375  4.6639  89.2000\n133   19 1982      4 14.928000 33.8528  4.1429  90.5000\n134   20 1977      4  1.053000 28.0450  0.1386 116.2250\n135   20 1978      4  1.117000 26.5632  0.1606 114.9750\n136   20 1979      4  1.125000 25.6042  0.1695 111.8250\n137   20",
        " 1980      4  1.040000 25.6604  0.2401 106.6750\n138   20 1981      4  0.995000 25.4900  0.2132  97.3000\n139   20 1982      4  0.923000 25.5370  0.2017  89.5250\n140   20 1983      4  0.908000 26.4244  0.1876  89.6000\n141   21 1977      4  1.991000 29.6870  0.4291 116.2250\n142   21 1978      4  2.671000 28.1284  0.5378 114.9750\n [ reached 'max' / getOption(\"max.print\") -- omitted 889 rows ]\n",
        "> ",
        "hsiao(log(emp) ~ log(wage) + log(capital), data = EmplUK)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: log(emp) ~ log(wage) + log(capital)\n\n    Hypothesis  F-statistic   p-value  \n  1    ",
        " H1       115.7743     < 0.001  \n  2     H2         6.6273     < 0.001  \n  3     H3       139.2370     < 0.001  \n",
        "> ",
        "hsiao(log(emp) ~ log(wage) + log(capital), data = EmplUK, type = \"HC3\")",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: log(emp) ~ log(wage) + log(capital)\n\n    Hypothesis  F-statistic   p-value  \n  1    ",
        " H1       115.7743     < 0.001  \n  2     H2         6.6273     < 0.001  \n  3     H3       139.2370     < 0.001  \n",
        "> ",
        "hsiao(log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp, data = Produc)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp\n\n    Hypothesis  F-statistic   p-v",
        "alue  \n  1     H1        44.2855     < 0.001  \n  2     H2         7.2499     < 0.001  \n  3     H3        75.8204     < 0.001  \n",
        "> ",
        "form <- formula(log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp)",
        "> ",
        "hsiao(form, data = Produc)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp\n\n    Hypothesis  F-statistic   p-v",
        "alue  \n  1     H1        44.2855     < 0.001  \n  2     H2         7.2499     < 0.001  \n  3     H3        75.8204     < 0.001  \n",
        "> ",
        "hsiao(sales ~ pop + price, data = Cigar)",
        "Error: object 'Cigar' not found\n",
        "> ",
        "data(\"Cigar\", package=\"plm\")",
        "> ",
        "sales ~ pop + price, data = Cigar",
        "Error: unexpected ',' in \"sales ~ pop + price,\"\n",
        "> ",
        "hsiao(sales ~ pop + price, data = Cigar)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: sales ~ pop + price\n\n    Hypothesis  F-statistic   p-value  \n  1     H1       126.40",
        "42     < 0.001  \n  2     H2        38.6190     < 0.001  \n  3     H3        85.2595     < 0.001  \n",
        "> ",
        "hsiao(log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1) +",
        "+ ",
        "          lag(log(capital), 0:2) + lag(log(output), 0:2) | lag(log(emp), 2:99),",
        "+ ",
        "      data = EmplUK)",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  0 (non-NA) cases\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)\n",
        "> ",
        "EmplUK",
        "    firm year sector       emp    wage capital   output\n1      1 1977      7  5.041000 13.1516  0.5894  95.7072\n2      1 1978      7  5.600000 12.3018  0.6318  97.3569\n3      1 1979      7  5.015000 12.8395  0.6771  99.6083\n4      1 1980      7  4.715000 13.8039  0.6171 100.5501\n5      1 1981      7  4.093000 14.2897  0.5076  99.5581\n6      1 1982      7  3.166000 14.8681  0.4229  98.6151\n7      1 1983      7  2.936000 13.7784  0.3920 100.0301\n8      2 1977      7 71.319000 14.7909 16.9363  95.7072\n9      2",
        " 1978      7 70.642998 14.1036 17.2422  97.3569\n10     2 1979      7 70.917999 14.9534 17.5413  99.6083\n11     2 1980      7 72.030998 15.4910 17.6574 100.5501\n12     2 1981      7 73.689003 16.1969 16.7133  99.5581\n13     2 1982      7 72.418999 16.1314 16.2469  98.6151\n14     2 1983      7 68.517998 16.3051 17.3696 100.0301\n15     3 1977      7 19.156000 22.6920  7.0975  95.7072\n16     3 1978      7 19.440001 20.6938  6.9469  97.3569\n17     3 1979      7 19.900000 21.2048  6.8565  99.6083\n18     3 1980   ",
        "   7 20.240000 22.1970  6.6547 100.5501\n19     3 1981      7 19.570000 24.8714  6.2136  99.5581\n20     3 1982      7 18.125000 24.8447  5.7146  98.6151\n21     3 1983      7 16.850000 28.9077  7.3431 100.0301\n22     4 1977      8 26.160000 14.8283  8.4902 118.2223\n23     4 1978      8 26.740000 14.8379  8.7420 120.1551\n24     4 1979      8 27.280001 14.8756  9.1869 118.8319\n25     4 1980      8 27.830000 15.2332  9.4036 111.9164\n26     4 1981      8 27.169001 17.2529  8.8939  97.5540\n27     4 1982      8 24.",
        "504000 19.3142  8.3905  92.1982\n28     4 1983      8 22.562000 20.0055  7.4351  92.4041\n29     5 1976      7 86.677002 20.6323 22.3804  94.8991\n30     5 1977      7 87.099998 18.2782 22.2703  96.5038\n31     5 1978      7 87.000000 18.1369 25.1670  98.8163\n32     5 1979      7 90.400002 18.1896 25.3515 100.4835\n33     5 1980      7 89.199997 19.2893 28.2394 100.1223\n34     5 1981      7 82.699997 19.8242 25.7959  98.5270\n35     5 1982      7 73.699997 19.3873 20.3681  99.5083\n36     6 1976      3  0.748000 2",
        "3.1889  0.1694 102.7724\n37     6 1977      3  0.766000 20.5393  0.1618 107.0270\n38     6 1978      3  0.762000 20.9387  0.1499 108.6788\n39     6 1979      3  0.729000 21.7626  0.1458 111.1190\n40     6 1980      3  0.731000 23.4707  0.1468 101.9265\n41     6 1981      3  0.779000 24.1252  0.1412  99.4971\n42     6 1982      3  0.782000 25.2065  0.1261  99.3103\n43     7 1976      3  1.600000 30.8513  0.9934 104.7664\n44     7 1977      3  1.650000 28.5550  0.9330 107.4791\n45     7 1978      3  1.680000 29.8602  ",
        "0.9650 108.9188\n46     7 1979      3  1.680000 30.5894  0.9629 111.5591\n47     7 1980      3  1.660000 27.4886  0.9224 100.0000\n48     7 1981      3  1.560000 31.4868  0.9992  99.3965\n49     7 1982      3  1.540000 32.0728  0.8802  99.2931\n50     8 1976      3  9.145001 30.9089  4.5486 104.7664\n51     8 1977      3 10.855000 24.4679  4.6194 107.4791\n52     8 1978      3 10.749000 28.0558  5.0373 108.9188\n53     8 1979      3 10.959000 28.7445  4.8748 111.5591\n54     8 1980      3 10.698000 28.4854  3.2221 1",
        "00.0000\n55     8 1981      3  8.174000 31.7356  2.8343  99.3965\n56     8 1982      3  4.701000 29.8963  1.7506  99.2931\n57     9 1976      3  2.006000 26.0825  0.3824 102.7724\n58     9 1977      3  2.656000 21.9545  0.4551 107.0270\n59     9 1978      3  2.712000 22.8100  0.4529 108.6788\n60     9 1979      3  2.744000 23.3720  0.4524 111.1190\n61     9 1980      3  2.757000 23.0737  0.4676 101.9265\n62     9 1981      3  2.849000 24.3044  0.4810  99.4971\n63     9 1982      3  2.752000 26.8984  0.4753  99.3103\n",
        "64    10 1976      7  3.823000 23.3533  1.1293  95.3657\n65    10 1977      7  3.935000 21.3251  1.0143  96.7315\n66    10 1978      7  3.528000 20.9319  1.1169  99.2333\n67    10 1979      7  3.520000 20.4536  1.1626 100.7335\n68    10 1980      7  3.467000 23.4946  1.0827 100.0000\n69    10 1981      7  3.090000 25.9553  1.0636  98.2324\n70    10 1982      7  3.262000 26.0361  1.0958  99.7635\n71    11 1976      3  1.359000 23.0614  0.4099 104.7664\n72    11 1977      3  1.346000 20.2275  0.5741 107.4791\n73    11",
        " 1978      3  1.338000 22.1435  0.5563 108.9188\n74    11 1979      3  1.353000 22.5496  0.5145 111.5591\n75    11 1980      3  1.264000 22.5875  0.5895 100.0000\n76    11 1981      3  1.158000 25.9585  0.4847  99.3965\n77    11 1982      3  1.175000 24.0345  0.4359  99.2931\n78    12 1976      3  1.780000 34.2991  0.2569 104.7664\n79    12 1977      3  1.643000 30.3979  0.2072 107.4791\n80    12 1978      3  1.390000 31.1431  0.1999 108.9188\n81    12 1979      3  1.350000 33.3105  0.2007 111.5591\n82    12 1980   ",
        "   3  1.082000 30.2147  0.1473 100.0000\n83    12 1981      3  0.780000 29.7414  0.1158  99.3965\n84    12 1982      3  0.680000 31.1235  0.1036  99.2931\n85    13 1976      1  2.353000 22.3833  0.5785 125.8064\n86    13 1977      1  2.386000 23.0607  0.5613 127.9649\n87    13 1978      1  2.375000 23.4931  0.5273 125.4294\n88    13 1979      1  2.415000 26.0042  0.5180 125.0259\n89    13 1980      1  2.266000 24.1671  0.4608 106.3044\n90    13 1981      1  1.777000 26.0573  0.3750  98.0729\n91    13 1982      1  1.",
        "537000 28.7064  0.3147  96.8674\n92    14 1978      1  3.165000 20.9113  0.3902 127.3866\n93    14 1979      1  3.096000 21.8887  0.4311 124.6424\n94    14 1980      1  2.991000 23.7010  0.4228 118.9132\n95    14 1981      1  2.692000 21.3925  0.3810  99.3576\n96    14 1982      1  2.175000 25.5237  0.3051  97.2428\n97    14 1983      1  1.801000 25.7211  0.2041  97.1944\n98    14 1984      1  1.428000 25.6452  0.1685  99.9862\n99    15 1977      9  7.220000 22.5898  1.8498 105.3355\n100   15 1978      9  7.321000 2",
        "2.0549  1.9215 108.1833\n101   15 1979      9  7.097000 22.2902  2.1855 110.6984\n102   15 1980      9  7.201000 20.6808  2.4345 105.9673\n103   15 1981      9  6.602000 21.6151  2.1255  96.5931\n104   15 1982      9  5.311000 23.1551  1.5594  92.0013\n105   15 1983      9  5.394000 25.0999  1.3576  92.2488\n106   16 1976      4  2.757000 29.3517  0.9175 116.4000\n107   16 1977      4  2.632000 27.0686  0.8613 115.7000\n108   16 1978      4  2.647000 27.2752  0.8519 112.8000\n109   16 1979      4  2.687000 26.6444  ",
        "0.5277 108.9000\n110   16 1980      4  2.417000 25.3591  0.5262 100.0000\n111   16 1981      4  2.218000 25.2731  0.5660  89.2000\n112   16 1982      4  2.106000 27.4446  0.5112  90.5000\n113   17 1977      1  1.090000 23.9352  0.1282 127.1640\n114   17 1978      1  1.144000 22.6139  0.1393 127.3866\n115   17 1979      1  1.195000 23.0801  0.1795 124.6424\n116   17 1980      1  1.259000 25.0346  0.1835 118.9132\n117   17 1981      1  1.319000 24.2587  0.1731  99.3576\n118   17 1982      1  1.188000 28.4659  0.1471  ",
        "97.2428\n119   17 1983      1  1.163000 29.4594  0.1246  97.1944\n120   18 1977      4  7.407000 29.9689  1.1694 116.2250\n121   18 1978      4  7.392000 26.2611  1.2643 114.9750\n122   18 1979      4  7.198000 25.7528  1.3536 111.8250\n123   18 1980      4  6.872000 24.3198  1.5672 106.6750\n124   18 1981      4  6.131000 24.3181  1.3429  97.3000\n125   18 1982      4  5.785000 26.5473  1.1385  89.5250\n126   18 1983      4  5.487000 26.5930  0.9603  89.6000\n127   19 1976      4 23.531000 34.0204  5.4762 116.4000\n",
        "128   19 1977      4 22.521000 30.3191  5.0656 115.7000\n129   19 1978      4 21.865999 29.1920  5.0976 112.8000\n130   19 1979      4 21.066999 28.6365  5.7196 108.9000\n131   19 1980      4 19.238001 29.7144  4.9972 100.0000\n132   19 1981      4 16.247999 31.3375  4.6639  89.2000\n133   19 1982      4 14.928000 33.8528  4.1429  90.5000\n134   20 1977      4  1.053000 28.0450  0.1386 116.2250\n135   20 1978      4  1.117000 26.5632  0.1606 114.9750\n136   20 1979      4  1.125000 25.6042  0.1695 111.8250\n137   20",
        " 1980      4  1.040000 25.6604  0.2401 106.6750\n138   20 1981      4  0.995000 25.4900  0.2132  97.3000\n139   20 1982      4  0.923000 25.5370  0.2017  89.5250\n140   20 1983      4  0.908000 26.4244  0.1876  89.6000\n141   21 1977      4  1.991000 29.6870  0.4291 116.2250\n142   21 1978      4  2.671000 28.1284  0.5378 114.9750\n [ reached 'max' / getOption(\"max.print\") -- omitted 889 rows ]\n",
        "> ",
        "data = EmplUK",
        "> ",
        "!is(data, \"pdata.frame\")",
        "[1] TRUE\n",
        "> ",
        "is.data.frame(data)",
        "[1] TRUE\n",
        "> ",
        "is.null(index)",
        "[1] FALSE\n",
        "> ",
        "      data <- pdata.frame(data)",
        "> ",
        "  pdims <- pdim(data)",
        "> ",
        "  N     <- pdims$nT$n",
        "> ",
        "  T     <- pdims$nT$T",
        "> ",
        "N",
        "[1] 140\n",
        "> ",
        "T",
        "[1] 9\n",
        "> ",
        "  RSS_indi <- sum(by(data, plm::index(data)[,1],",
        "+ ",
        "                     function(x) deviance(plm(formula, x, model = \"pooling\"",
        "+ ",
        "))))",
        "Error in eval(predvars, data, env) : object 'lwage' not found\n",
        "> ",
        "names(data)",
        "[1] \"firm\"    \"year\"    \"sector\"  \"emp\"     \"wage\"    \"capital\" \"output\" \n",
        "> ",
        "formula",
        "lwage ~ wks + south + smsa + married + exp + I(exp^2) + bluecol + \n    ind + union + sex + black + ed | bluecol + south + smsa + \n    ind + sex + black | wks + married + union + exp\n",
        "> ",
        "formula <- log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1) +",
        "+ ",
        "    lag(log(capital), 0:2) + lag(log(output), 0:2) | lag(log(emp), 2:99)",
        "> ",
        "hsiao(log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1) +",
        "+ ",
        "          lag(log(capital), 0:2) + lag(log(output), 0:2) | lag(log(emp), 2:99),",
        "+ ",
        "      data = EmplUK)",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  0 (non-NA) cases\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)\n",
        "> ",
        "sum(by(data, plm::index(data)[,1],",
        "+ ",
        "                     function(x) deviance(plm(formula, x, model = \"pooling\"",
        "+ ",
        "))))",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  0 (non-NA) cases\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)\n",
        "> ",
        "data",
        "        firm year sector       emp    wage capital   output\n1-1977     1 1977      7  5.041000 13.1516  0.5894  95.7072\n1-1978     1 1978      7  5.600000 12.3018  0.6318  97.3569\n1-1979     1 1979      7  5.015000 12.8395  0.6771  99.6083\n1-1980     1 1980      7  4.715000 13.8039  0.6171 100.5501\n1-1981     1 1981      7  4.093000 14.2897  0.5076  99.5581\n1-1982     1 1982      7  3.166000 14.8681  0.4229  98.6151\n1-1983     1 1983      7  2.936000 13.7784  0.3920 100.0301\n2-1977     2 1977      7 71.3190",
        "00 14.7909 16.9363  95.7072\n2-1978     2 1978      7 70.642998 14.1036 17.2422  97.3569\n2-1979     2 1979      7 70.917999 14.9534 17.5413  99.6083\n2-1980     2 1980      7 72.030998 15.4910 17.6574 100.5501\n2-1981     2 1981      7 73.689003 16.1969 16.7133  99.5581\n2-1982     2 1982      7 72.418999 16.1314 16.2469  98.6151\n2-1983     2 1983      7 68.517998 16.3051 17.3696 100.0301\n3-1977     3 1977      7 19.156000 22.6920  7.0975  95.7072\n3-1978     3 1978      7 19.440001 20.6938  6.9469  97.3569\n3-19",
        "79     3 1979      7 19.900000 21.2048  6.8565  99.6083\n3-1980     3 1980      7 20.240000 22.1970  6.6547 100.5501\n3-1981     3 1981      7 19.570000 24.8714  6.2136  99.5581\n3-1982     3 1982      7 18.125000 24.8447  5.7146  98.6151\n3-1983     3 1983      7 16.850000 28.9077  7.3431 100.0301\n4-1977     4 1977      8 26.160000 14.8283  8.4902 118.2223\n4-1978     4 1978      8 26.740000 14.8379  8.7420 120.1551\n4-1979     4 1979      8 27.280001 14.8756  9.1869 118.8319\n4-1980     4 1980      8 27.830000 1",
        "5.2332  9.4036 111.9164\n4-1981     4 1981      8 27.169001 17.2529  8.8939  97.5540\n4-1982     4 1982      8 24.504000 19.3142  8.3905  92.1982\n4-1983     4 1983      8 22.562000 20.0055  7.4351  92.4041\n5-1976     5 1976      7 86.677002 20.6323 22.3804  94.8991\n5-1977     5 1977      7 87.099998 18.2782 22.2703  96.5038\n5-1978     5 1978      7 87.000000 18.1369 25.1670  98.8163\n5-1979     5 1979      7 90.400002 18.1896 25.3515 100.4835\n5-1980     5 1980      7 89.199997 19.2893 28.2394 100.1223\n5-1981  ",
        "   5 1981      7 82.699997 19.8242 25.7959  98.5270\n5-1982     5 1982      7 73.699997 19.3873 20.3681  99.5083\n6-1976     6 1976      3  0.748000 23.1889  0.1694 102.7724\n6-1977     6 1977      3  0.766000 20.5393  0.1618 107.0270\n6-1978     6 1978      3  0.762000 20.9387  0.1499 108.6788\n6-1979     6 1979      3  0.729000 21.7626  0.1458 111.1190\n6-1980     6 1980      3  0.731000 23.4707  0.1468 101.9265\n6-1981     6 1981      3  0.779000 24.1252  0.1412  99.4971\n6-1982     6 1982      3  0.782000 25.20",
        "65  0.1261  99.3103\n7-1976     7 1976      3  1.600000 30.8513  0.9934 104.7664\n7-1977     7 1977      3  1.650000 28.5550  0.9330 107.4791\n7-1978     7 1978      3  1.680000 29.8602  0.9650 108.9188\n7-1979     7 1979      3  1.680000 30.5894  0.9629 111.5591\n7-1980     7 1980      3  1.660000 27.4886  0.9224 100.0000\n7-1981     7 1981      3  1.560000 31.4868  0.9992  99.3965\n7-1982     7 1982      3  1.540000 32.0728  0.8802  99.2931\n8-1976     8 1976      3  9.145001 30.9089  4.5486 104.7664\n8-1977     8",
        " 1977      3 10.855000 24.4679  4.6194 107.4791\n8-1978     8 1978      3 10.749000 28.0558  5.0373 108.9188\n8-1979     8 1979      3 10.959000 28.7445  4.8748 111.5591\n8-1980     8 1980      3 10.698000 28.4854  3.2221 100.0000\n8-1981     8 1981      3  8.174000 31.7356  2.8343  99.3965\n8-1982     8 1982      3  4.701000 29.8963  1.7506  99.2931\n9-1976     9 1976      3  2.006000 26.0825  0.3824 102.7724\n9-1977     9 1977      3  2.656000 21.9545  0.4551 107.0270\n9-1978     9 1978      3  2.712000 22.8100  ",
        "0.4529 108.6788\n9-1979     9 1979      3  2.744000 23.3720  0.4524 111.1190\n9-1980     9 1980      3  2.757000 23.0737  0.4676 101.9265\n9-1981     9 1981      3  2.849000 24.3044  0.4810  99.4971\n9-1982     9 1982      3  2.752000 26.8984  0.4753  99.3103\n10-1976   10 1976      7  3.823000 23.3533  1.1293  95.3657\n10-1977   10 1977      7  3.935000 21.3251  1.0143  96.7315\n10-1978   10 1978      7  3.528000 20.9319  1.1169  99.2333\n10-1979   10 1979      7  3.520000 20.4536  1.1626 100.7335\n10-1980   10 198",
        "0      7  3.467000 23.4946  1.0827 100.0000\n10-1981   10 1981      7  3.090000 25.9553  1.0636  98.2324\n10-1982   10 1982      7  3.262000 26.0361  1.0958  99.7635\n11-1976   11 1976      3  1.359000 23.0614  0.4099 104.7664\n11-1977   11 1977      3  1.346000 20.2275  0.5741 107.4791\n11-1978   11 1978      3  1.338000 22.1435  0.5563 108.9188\n11-1979   11 1979      3  1.353000 22.5496  0.5145 111.5591\n11-1980   11 1980      3  1.264000 22.5875  0.5895 100.0000\n11-1981   11 1981      3  1.158000 25.9585  0.48",
        "47  99.3965\n11-1982   11 1982      3  1.175000 24.0345  0.4359  99.2931\n12-1976   12 1976      3  1.780000 34.2991  0.2569 104.7664\n12-1977   12 1977      3  1.643000 30.3979  0.2072 107.4791\n12-1978   12 1978      3  1.390000 31.1431  0.1999 108.9188\n12-1979   12 1979      3  1.350000 33.3105  0.2007 111.5591\n12-1980   12 1980      3  1.082000 30.2147  0.1473 100.0000\n12-1981   12 1981      3  0.780000 29.7414  0.1158  99.3965\n12-1982   12 1982      3  0.680000 31.1235  0.1036  99.2931\n13-1976   13 1976   ",
        "   1  2.353000 22.3833  0.5785 125.8064\n13-1977   13 1977      1  2.386000 23.0607  0.5613 127.9649\n13-1978   13 1978      1  2.375000 23.4931  0.5273 125.4294\n13-1979   13 1979      1  2.415000 26.0042  0.5180 125.0259\n13-1980   13 1980      1  2.266000 24.1671  0.4608 106.3044\n13-1981   13 1981      1  1.777000 26.0573  0.3750  98.0729\n13-1982   13 1982      1  1.537000 28.7064  0.3147  96.8674\n14-1978   14 1978      1  3.165000 20.9113  0.3902 127.3866\n14-1979   14 1979      1  3.096000 21.8887  0.4311 1",
        "24.6424\n14-1980   14 1980      1  2.991000 23.7010  0.4228 118.9132\n14-1981   14 1981      1  2.692000 21.3925  0.3810  99.3576\n14-1982   14 1982      1  2.175000 25.5237  0.3051  97.2428\n14-1983   14 1983      1  1.801000 25.7211  0.2041  97.1944\n14-1984   14 1984      1  1.428000 25.6452  0.1685  99.9862\n15-1977   15 1977      9  7.220000 22.5898  1.8498 105.3355\n15-1978   15 1978      9  7.321000 22.0549  1.9215 108.1833\n15-1979   15 1979      9  7.097000 22.2902  2.1855 110.6984\n15-1980   15 1980      9",
        "  7.201000 20.6808  2.4345 105.9673\n15-1981   15 1981      9  6.602000 21.6151  2.1255  96.5931\n15-1982   15 1982      9  5.311000 23.1551  1.5594  92.0013\n15-1983   15 1983      9  5.394000 25.0999  1.3576  92.2488\n16-1976   16 1976      4  2.757000 29.3517  0.9175 116.4000\n16-1977   16 1977      4  2.632000 27.0686  0.8613 115.7000\n16-1978   16 1978      4  2.647000 27.2752  0.8519 112.8000\n16-1979   16 1979      4  2.687000 26.6444  0.5277 108.9000\n16-1980   16 1980      4  2.417000 25.3591  0.5262 100.0",
        "000\n16-1981   16 1981      4  2.218000 25.2731  0.5660  89.2000\n16-1982   16 1982      4  2.106000 27.4446  0.5112  90.5000\n17-1977   17 1977      1  1.090000 23.9352  0.1282 127.1640\n17-1978   17 1978      1  1.144000 22.6139  0.1393 127.3866\n17-1979   17 1979      1  1.195000 23.0801  0.1795 124.6424\n17-1980   17 1980      1  1.259000 25.0346  0.1835 118.9132\n17-1981   17 1981      1  1.319000 24.2587  0.1731  99.3576\n17-1982   17 1982      1  1.188000 28.4659  0.1471  97.2428\n17-1983   17 1983      1  1.",
        "163000 29.4594  0.1246  97.1944\n18-1977   18 1977      4  7.407000 29.9689  1.1694 116.2250\n18-1978   18 1978      4  7.392000 26.2611  1.2643 114.9750\n18-1979   18 1979      4  7.198000 25.7528  1.3536 111.8250\n18-1980   18 1980      4  6.872000 24.3198  1.5672 106.6750\n18-1981   18 1981      4  6.131000 24.3181  1.3429  97.3000\n18-1982   18 1982      4  5.785000 26.5473  1.1385  89.5250\n18-1983   18 1983      4  5.487000 26.5930  0.9603  89.6000\n19-1976   19 1976      4 23.531000 34.0204  5.4762 116.4000\n",
        "19-1977   19 1977      4 22.521000 30.3191  5.0656 115.7000\n19-1978   19 1978      4 21.865999 29.1920  5.0976 112.8000\n19-1979   19 1979      4 21.066999 28.6365  5.7196 108.9000\n19-1980   19 1980      4 19.238001 29.7144  4.9972 100.0000\n19-1981   19 1981      4 16.247999 31.3375  4.6639  89.2000\n19-1982   19 1982      4 14.928000 33.8528  4.1429  90.5000\n20-1977   20 1977      4  1.053000 28.0450  0.1386 116.2250\n20-1978   20 1978      4  1.117000 26.5632  0.1606 114.9750\n20-1979   20 1979      4  1.1250",
        "00 25.6042  0.1695 111.8250\n20-1980   20 1980      4  1.040000 25.6604  0.2401 106.6750\n20-1981   20 1981      4  0.995000 25.4900  0.2132  97.3000\n20-1982   20 1982      4  0.923000 25.5370  0.2017  89.5250\n20-1983   20 1983      4  0.908000 26.4244  0.1876  89.6000\n21-1977   21 1977      4  1.991000 29.6870  0.4291 116.2250\n21-1978   21 1978      4  2.671000 28.1284  0.5378 114.9750\n [ reached 'max' / getOption(\"max.print\") -- omitted 889 rows ]\n",
        "> ",
        "plm::index(data)[,1]",
        "   [1] 1   1   1   1   1   1   1   2   2   2   2   2   2   2   3   3   3   3   3   3   3   4   4   4   4  \n  [26] 4   4   4   5   5   5   5   5   5   5   6   6   6   6   6   6   6   7   7   7   7   7   7   7   8  \n  [51] 8   8   8   8   8   8   9   9   9   9   9   9   9   10  10  10  10  10  10  10  11  11  11  11  11 \n  [76] 11  11  12  12  12  12  12  12  12  13  13  13  13  13  13  13  14  14  14  14  14  14  14  15  15 \n [101] 15  15  15  15  15  16  16  16  16  16  16  16  17  17  17  17  17  17  17  1",
        "8  18  18  18  18  18 \n [126] 18  19  19  19  19  19  19  19  20  20  20  20  20  20  20  21  21  21  21  21  21  21  22  22  22 \n [151] 22  22  22  22  23  23  23  23  23  23  23  24  24  24  24  24  24  24  25  25  25  25  25  25  25 \n [176] 26  26  26  26  26  26  26  27  27  27  27  27  27  27  28  28  28  28  28  28  28  29  29  29  29 \n [201] 29  29  29  30  30  30  30  30  30  30  31  31  31  31  31  31  31  32  32  32  32  32  32  32  33 \n [226] 33  33  33  33  33  33  34  34  34  34  34  34  34  35",
        "  35  35  35  35  35  35  36  36  36  36  36 \n [251] 36  36  37  37  37  37  37  37  37  38  38  38  38  38  38  38  39  39  39  39  39  39  39  40  40 \n [276] 40  40  40  40  40  41  41  41  41  41  41  41  42  42  42  42  42  42  42  43  43  43  43  43  43 \n [301] 43  44  44  44  44  44  44  44  45  45  45  45  45  45  45  46  46  46  46  46  46  46  47  47  47 \n [326] 47  47  47  47  48  48  48  48  48  48  48  49  49  49  49  49  49  49  50  50  50  50  50  50  50 \n [351] 51  51  51  51  51  51  51  52 ",
        " 52  52  52  52  52  52  53  53  53  53  53  53  53  54  54  54  54 \n [376] 54  54  54  55  55  55  55  55  55  55  56  56  56  56  56  56  56  57  57  57  57  57  57  57  58 \n [401] 58  58  58  58  58  58  59  59  59  59  59  59  59  60  60  60  60  60  60  60  61  61  61  61  61 \n [426] 61  61  62  62  62  62  62  62  62  63  63  63  63  63  63  63  64  64  64  64  64  64  64  65  65 \n [451] 65  65  65  65  65  66  66  66  66  66  66  66  67  67  67  67  67  67  67  68  68  68  68  68  68 \n [476] 68  69  ",
        "69  69  69  69  69  69  70  70  70  70  70  70  70  71  71  71  71  71  71  71  72  72  72 \n [501] 72  72  72  72  73  73  73  73  73  73  73  74  74  74  74  74  74  74  75  75  75  75  75  75  75 \n [526] 76  76  76  76  76  76  76  77  77  77  77  77  77  77  78  78  78  78  78  78  78  79  79  79  79 \n [551] 79  79  79  80  80  80  80  80  80  80  81  81  81  81  81  81  81  82  82  82  82  82  82  82  83 \n [576] 83  83  83  83  83  83  84  84  84  84  84  84  84  85  85  85  85  85  85  85  86  86  86  ",
        "86  86 \n [601] 86  86  87  87  87  87  87  87  87  88  88  88  88  88  88  88  89  89  89  89  89  89  89  90  90 \n [626] 90  90  90  90  90  91  91  91  91  91  91  91  92  92  92  92  92  92  92  93  93  93  93  93  93 \n [651] 93  94  94  94  94  94  94  94  95  95  95  95  95  95  95  96  96  96  96  96  96  96  97  97  97 \n [676] 97  97  97  97  98  98  98  98  98  98  98  99  99  99  99  99  99  99  100 100 100 100 100 100 100\n [701] 101 101 101 101 101 101 101 102 102 102 102 102 102 102 103 103 103 1",
        "03 103 103 103 104 104 104 104\n [726] 104 104 104 104 105 105 105 105 105 105 105 105 106 106 106 106 106 106 106 106 107 107 107 107 107\n [751] 107 107 107 108 108 108 108 108 108 108 108 109 109 109 109 109 109 109 109 110 110 110 110 110 110\n [776] 110 110 111 111 111 111 111 111 111 111 112 112 112 112 112 112 112 112 113 113 113 113 113 113 113\n [801] 113 114 114 114 114 114 114 114 114 115 115 115 115 115 115 115 115 116 116 116 116 116 116 116 116\n [826] 117 117 117 117 117 117 117 117 118 118 118 11",
        "8 118 118 118 118 119 119 119 119 119 119 119 119 120\n [851] 120 120 120 120 120 120 120 121 121 121 121 121 121 121 121 122 122 122 122 122 122 122 122 123 123\n [876] 123 123 123 123 123 123 124 124 124 124 124 124 124 124 125 125 125 125 125 125 125 125 126 126 126\n [901] 126 126 126 126 126 127 127 127 127 127 127 127 127 127 128 128 128 128 128 128 128 128 128 129 129\n [926] 129 129 129 129 129 129 129 130 130 130 130 130 130 130 130 130 131 131 131 131 131 131 131 131 131\n [951] 132 132 132 132 132 132",
        " 132 132 132 133 133 133 133 133 133 133 133 133 134 134 134 134 134 134 134\n [976] 134 134 135 135 135 135 135 135 135 135 135 136 136 136 136 136 136 136 136 136 137 137 137 137 137\n [ reached getOption(\"max.print\") -- omitted 31 entries ]\n140 Levels: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ... 140\n",
        "> ",
        "by(data, plm::index(data)[,1],",
        "+ ",
        "                     function(x) deviance(plm(formula, x, model = \"pooling\"",
        "+ ",
        ")))",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  0 (non-NA) cases\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)\n",
        "> ",
        "warnings()",
        "Warning messages:\n1: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n2: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n3: In flag.pseries(x = x, n = k, shift = \"time\")",
        " :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n4: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n5: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be",
        " a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n6: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n7: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to r",
        "emove unused factor levels from your data.\n8: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n9: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n10: In flag.pseries(x =",
        " x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n11: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n12: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-",
        "size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n13: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n14: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. S",
        "ee #25. Use fdroplevels() to remove unused factor levels from your data.\n15: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n16: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from yo",
        "ur data.\n17: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n18: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n19: In flag.pseries(x = x, n = k, shift = \"time\") :\n  l",
        "ag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n20: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n21: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a r",
        "esult of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n22: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n23: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to rem",
        "ove unused factor levels from your data.\n24: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n25: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n26: In flag.pseries(x =",
        " x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n27: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n28: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-",
        "size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n29: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n30: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. S",
        "ee #25. Use fdroplevels() to remove unused factor levels from your data.\n31: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n32: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from yo",
        "ur data.\n33: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n34: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n35: In flag.pseries(x = x, n = k, shift = \"time\") :\n  l",
        "ag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n36: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n37: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a r",
        "esult of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n38: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n39: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to rem",
        "ove unused factor levels from your data.\n40: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n41: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n42: In flag.pseries(x =",
        " x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n43: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n44: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-",
        "size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n45: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n46: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. S",
        "ee #25. Use fdroplevels() to remove unused factor levels from your data.\n47: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n48: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from yo",
        "ur data.\n49: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n50: In flag.pseries(x = x, n = k, shift = \"time\") :\n  lag-length exceeds average group-size (7). This could also be a result of unused factor levels. See #25. Use fdroplevels() to remove unused factor levels from your data.\n",
        "> ",
        "data(\"Grunfeld\", package = \"plm\")",
        "> ",
        "p <- plm(inv ~ value + capital,",
        "+ ",
        "         data = Grunfeld, model = \"pooling\")",
        "> ",
        "p[]",
        "$coefficients\n(Intercept)       value     capital \n-42.7143694   0.1155622   0.2306785 \n\n$vcov\n            (Intercept)         value       capital\n(Intercept) 90.47198093 -1.678301e-02 -1.005495e-01\nvalue       -0.01678301  3.405551e-05 -7.265559e-05\ncapital     -0.10054949 -7.265559e-05  6.490165e-04\n\n$residuals\n          1           2           3           4           5           6           7           8 \n   3.910371 -116.335423 -205.423978  -70.516223 -171.848328  -80.541311  -30.101267   45.762121 \n   ",
        "       9          10          11          12          13          14          15          16 \n  12.937867   37.628235  -16.640273   71.676909   28.422756  -16.983619  -65.103848   -1.906524 \n         17          18          19          20          21          22          23          24 \n -38.487943   34.796727  215.825180  369.446372   82.761985  177.532733  176.092241   36.760377 \n         25          26          27          28          29          30          31          32 \n -25.208603   91.104023  180.1",
        "19299  168.802613  105.293165   56.913808   38.282207  193.478531 \n         33          34          35          36          37          38          39          40 \n 194.500179  278.538187  174.181037  185.133645  287.419701  336.202064  305.121856  103.057244 \n         41          42          43          44          45          46          47          48 \n -82.023047 -169.318660 -231.261085 -184.429741 -209.732075 -172.331866 -107.195060 -115.287604 \n         49          50          51          52          ",
        "53          54          55          56 \n-171.944115 -169.579099 -169.424617 -132.396298 -106.819117 -121.744245 -167.076036 -199.239737 \n         57          58          59          60          61          62          63          64 \n-187.193887 -207.815898 -236.464835 -291.675735   32.335045   16.303474   -1.175564   31.760555 \n         65          66          67          68          69          70          71          72 \n   1.744145   12.539705   19.341543   25.559435    6.639070    7.619711   21.087515 ",
        "  -6.016622 \n         73          74          75          76          77          78          79          80 \n  16.154203   26.384126   19.476019   25.585285   62.901512   36.665513   22.071045   38.232556 \n         81          82          83          84          85          86          87          88 \n  21.909918   26.983072   40.222306   10.826864  -11.286447  -11.595811   -3.772317  -33.446940 \n         89          90          91          92          93          94          95          96 \n -10.926072  -",
        "35.075537  -34.041527  -48.150777  -58.743039  -50.212239  -62.938928  -82.070467 \n         97          98          99         100         101         102         103         104 \n -72.570143  -81.652491  -90.039947 -103.789827   38.809214   40.746928   36.482658   36.159453 \n        105         106         107         108         109         110         111         112 \n  23.006393   24.706226   39.938481   35.452507   15.565756   15.783361   22.964381   24.710025 \n        113         114         115      ",
        "   116         117         118         119         120 \n  21.786763   30.067896   20.709999    4.265045   18.914118   14.944038   29.747298   16.210627 \n        121         122         123         124         125         126         127         128 \n  28.082807   13.965571   18.366144   18.540731    5.741799    8.238065   15.279148    2.101255 \n        129         130         131         132         133         134         135         136 \n   5.148457   26.453027   -5.338351   -7.428506   -8.755235  -12.030",
        "908  -16.090351  -30.103193 \n        137         138         139         140         141         142         143         144 \n -17.144984  -12.891037  -17.168523   -7.990369   33.098995    8.799754   -8.187463   -3.331944 \n        145         146         147         148         149         150         151         152 \n  -3.947340   -7.459426   20.805374    7.175635  -11.059858  -12.936312  -24.522745  -11.549001 \n        153         154         155         156         157         158         159         160",
        " \n   5.458152  -14.389057  -25.421027  -29.984462  -16.468519  -18.926610  -45.451664  -75.327336 \n        161         162         163         164         165         166         167         168 \n  -1.607908   -7.673831   -7.563116  -10.498262  -17.649996  -15.286846  -10.178167   -6.933304 \n        169         170         171         172         173         174         175         176 \n -25.040279   -3.110323  -22.605700  -10.146827  -13.514161  -33.914281  -42.095832  -32.274110 \n        177         178  ",
        "       179         180         181         182         183         184 \n -30.270497  -41.675437  -50.685031  -70.737406   36.021804   33.465338   34.350959   36.866666 \n        185         186         187         188         189         190         191         192 \n  34.426622   33.560553   34.927106   36.507527   35.625952   35.963703   35.701056   36.173086 \n        193         194         195         196         197         198         199         200 \n  38.116650   39.275093   36.987007   36.138673   35",
        ".695834   37.823596   39.210692   37.812274 \n\n$df.residual\n[1] 197\n\n$formula\ninv ~ value + capital\n\n$model\n        inv   value capital\n1    317.60 3078.50    2.80\n2    391.80 4661.70   52.60\n3    410.60 5387.10  156.90\n4    257.70 2792.20  209.20\n5    330.80 4313.20  203.40\n6    461.20 4643.90  207.20\n7    512.00 4551.20  255.20\n8    448.00 3244.10  303.70\n9    499.60 4053.70  264.10\n10   547.50 4379.30  201.60\n11   561.20 4840.90  265.00\n12   688.10 4900.90  402.20\n13   568.90 3526.50  761.50\n14   529.20 3",
        "254.70  922.40\n15   555.10 3700.20 1020.10\n16   642.90 3755.60 1099.00\n17   755.90 4833.00 1207.70\n18   891.20 4924.90 1430.50\n19  1304.40 6241.70 1777.30\n20  1486.70 5593.60 2226.30\n21   209.90 1362.40   53.80\n22   355.30 1807.10   50.50\n23   469.90 2676.30  118.10\n24   262.30 1801.90  260.20\n25   230.40 1957.30  312.70\n26   361.60 2202.90  254.20\n27   472.80 2380.50  261.40\n28   445.60 2168.60  298.70\n29   361.60 1985.10  301.80\n30   288.20 1813.90  279.10\n31   258.70 1850.20  213.80\n32   420.30 2067.70  ",
        "132.60\n33   420.50 1796.70  264.80\n34   494.50 1625.80  306.90\n35   405.10 1667.00  351.10\n36   418.80 1677.40  357.80\n37   588.20 2289.50  342.10\n38   645.50 2159.40  444.20\n39   641.00 2031.30  623.60\n40   459.30 2115.50  669.70\n41    33.10 1170.60   97.80\n42    45.00 2015.80  104.40\n43    77.20 2803.30  118.00\n44    44.60 2039.70  156.20\n45    48.10 2256.20  172.60\n46    74.40 2132.20  186.60\n47   113.00 1834.10  220.90\n48    91.90 1588.00  287.80\n49    61.30 1749.40  319.90\n50    56.80 1687.20  321.30\n5",
        "1    93.60 2007.70  319.60\n52   159.90 2208.30  346.00\n53   147.20 1656.70  456.40\n54   146.30 1604.40  543.40\n55    98.30 1431.80  618.30\n56    93.50 1610.50  647.40\n57   135.20 1819.40  671.30\n58   157.30 2079.70  726.10\n59   179.50 2371.60  800.30\n60   189.60 2759.90  888.90\n61    40.29  417.50   10.50\n62    72.76  837.80   10.20\n63    66.26  883.90   34.70\n64    51.60  437.90   51.80\n65    52.41  679.70   64.30\n66    69.41  727.80   67.10\n67    68.35  643.60   75.20\n68    46.80  410.90   71.40\n69    47.",
        "40  588.40   67.10\n70    59.57  698.40   60.50\n71    88.78  846.40   54.60\n72    74.12  893.80   84.80\n73    62.68  579.00   96.80\n74    89.36  694.60  110.20\n75    78.98  590.30  147.40\n76   100.66  693.50  163.20\n77   160.62  809.00  203.50\n78   145.00  727.00  290.60\n79   174.93 1001.50  346.10\n80   172.49  703.20  414.90\n81    39.68  157.70  183.20\n82    50.73  167.90  204.00\n83    74.24  192.90  236.00\n84    53.51  156.70  291.70\n85    42.65  191.40  323.10\n86    46.48  185.50  344.00\n87    61.40  199.",
        "60  367.70\n88    39.67  189.50  407.20\n89    62.24  151.20  426.60\n90    52.32  187.70  470.00\n91    63.21  214.70  499.20\n92    59.37  232.90  534.60\n93    58.02  249.00  566.60\n94    70.34  224.50  595.30\n95    67.42  237.30  631.40\n96    55.74  240.10  662.30\n97    80.30  327.30  683.90\n98    85.40  359.40  729.30\n99    91.90  398.40  774.30\n100   81.43  365.70  804.90\n101   20.36  197.00    6.50\n102   25.98  210.30   15.80\n103   25.94  223.10   27.70\n104   27.53  216.70   39.20\n105   24.60  286.40   48.",
        "60\n106   28.54  298.00   52.50\n107   43.41  276.90   61.50\n108   42.81  272.60   80.50\n109   27.84  287.40   94.40\n110   32.60  330.30   92.60\n111   39.03  324.40   92.30\n112   50.17  401.90   94.20\n113   51.85  407.40  111.40\n114   64.03  409.20  127.40\n115   68.16  482.20  149.30\n116   77.34  673.80  164.40\n117   95.30  676.90  177.20\n118   99.49  702.00  200.00\n119  127.52  793.50  211.50\n120  135.72  927.30  238.70\n121   24.43  138.00  100.20\n122   23.21  200.10  125.00\n123   32.78  210.10  142.40\n124  ",
        " 32.54  161.20  165.10\n125   26.65  161.70  194.80\n126   33.71  145.10  222.90\n127   43.50  110.60  252.10\n128   34.46   98.10  276.30\n129   44.28  108.80  300.30\n130   70.80  118.20  318.20\n131   44.12  126.50  336.20\n132   48.98  156.70  351.20\n133   48.51  119.40  373.60\n134   50.00  129.10  389.40\n135   50.59  134.80  406.70\n136   42.53  140.80  429.50\n137   64.77  179.00  450.60\n138   72.68  178.10  466.90\n139   73.86  186.80  486.20\n140   89.51  192.70  511.30\n141   12.93  191.50    1.80\n142   25.90  ",
        "516.00    0.80\n143   35.05  729.00    7.40\n144   22.89  560.40   18.10\n145   18.84  519.90   23.50\n146   28.57  628.50   26.50\n147   48.51  537.10   36.20\n148   43.34  561.20   60.80\n149   37.02  617.20   84.40\n150   37.81  626.70   91.20\n151   39.27  737.20   92.40\n152   53.46  760.50   86.00\n153   55.56  581.40  111.10\n154   49.56  662.30  130.60\n155   32.04  583.80  141.80\n156   32.24  635.20  136.70\n157   54.38  723.80  129.70\n158   71.78  864.10  145.50\n159   90.08 1193.50  174.80\n160   68.60 1188.90  ",
        "213.50\n161   26.63  290.60  162.00\n162   23.39  291.10  174.00\n163   30.65  335.00  183.00\n164   20.89  246.00  198.00\n165   28.78  356.20  208.00\n166   26.93  289.80  223.00\n167   32.08  268.20  234.00\n168   32.21  213.30  248.00\n169   35.69  348.20  274.00\n170   62.47  374.20  282.00\n171   52.32  387.20  316.00\n172   56.95  347.40  302.00\n173   54.32  291.90  333.00\n174   40.53  297.20  359.00\n175   32.54  276.90  370.00\n176   43.48  274.60  376.00\n177   56.49  339.90  391.00\n178   65.98  474.80  414.00\n1",
        "79   66.11  496.00  443.00\n180   49.34  474.50  468.00\n181    2.54   70.91    4.50\n182    2.00   87.94    4.71\n183    2.19   82.20    4.57\n184    1.99   58.72    4.56\n185    2.03   80.54    4.38\n186    1.81   86.47    4.21\n187    2.14   77.68    4.12\n188    1.86   62.16    3.83\n189    0.93   62.24    3.58\n190    1.18   61.82    3.41\n191    1.36   65.85    3.31\n192    2.24   69.54    3.23\n193    3.81   64.97    3.90\n194    5.66   68.00    5.38\n195    4.21   71.24    7.39\n196    3.42   69.05    8.74\n197    4.",
        "67   83.04    9.07\n198    6.00   74.42    9.93\n199    6.53   63.51   11.68\n200    5.12   58.12   14.33\n\n$assign\n[1] 0 1 2\n\n$args\n$args$model\n[1] \"pooling\"\n\n$args$effect\n[1] \"individual\"\n\n$args$random.method\nNULL\n\n$args$random.models\nNULL\n\n$args$random.dfcor\nNULL\n\n$args$inst.method\n[1] \"bvk\"\n\n\n$aliased\n(Intercept)       value     capital \n      FALSE       FALSE       FALSE \n\n$call\nplm(formula = inv ~ value + capital, data = Grunfeld, model = \"pooling\")\n\n",
        "> ",
        "summary(p)",
        "Pooling Model\n\nCall:\nplm(formula = inv ~ value + capital, data = Grunfeld, model = \"pooling\")\n\nBalanced Panel: n = 10, T = 20, N = 200\n\nResiduals:\n     Min.   1st Qu.    Median   3rd Qu.      Max. \n-291.6757  -30.0137    5.3033   34.8293  369.4464 \n\nCoefficients:\n               Estimate  Std. Error t-value  Pr(>|t|)    \n(Intercept) -42.7143694   9.5116760 -4.4907 1.207e-05 ***\nvalue         0.1155622   0.0058357 19.8026 < 2.2e-16 ***\ncapital       0.2306785   0.0254758  9.0548 < 2.2e-16 ***\n---\nSignif. code",
        "s:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nTotal Sum of Squares:    9359900\nResidual Sum of Squares: 1755900\nR-Squared:      0.81241\nAdj. R-Squared: 0.8105\nF-statistic: 426.576 on 2 and 197 DF, p-value: < 2.22e-16\n",
        "> ",
        "sum(by(data, plm::index(data)[,1],",
        "+ ",
        "                     function(x) deviance(lm(formula, x, model = \"pooling\",",
        "+ ",
        "                                              ...))))",
        "Error in deviance(lm(formula, x, model = \"pooling\", ...)) : \n  '...' used in an incorrect context\n",
        "> ",
        "data[,plm::index(data)[,1]==1]",
        "        firm year sector       emp    wage capital   output\n1-1977     1 1977      7  5.041000 13.1516  0.5894  95.7072\n1-1978     1 1978      7  5.600000 12.3018  0.6318  97.3569\n1-1979     1 1979      7  5.015000 12.8395  0.6771  99.6083\n1-1980     1 1980      7  4.715000 13.8039  0.6171 100.5501\n1-1981     1 1981      7  4.093000 14.2897  0.5076  99.5581\n1-1982     1 1982      7  3.166000 14.8681  0.4229  98.6151\n1-1983     1 1983      7  2.936000 13.7784  0.3920 100.0301\n2-1977     2 1977      7 71.3190",
        "00 14.7909 16.9363  95.7072\n2-1978     2 1978      7 70.642998 14.1036 17.2422  97.3569\n2-1979     2 1979      7 70.917999 14.9534 17.5413  99.6083\n2-1980     2 1980      7 72.030998 15.4910 17.6574 100.5501\n2-1981     2 1981      7 73.689003 16.1969 16.7133  99.5581\n2-1982     2 1982      7 72.418999 16.1314 16.2469  98.6151\n2-1983     2 1983      7 68.517998 16.3051 17.3696 100.0301\n3-1977     3 1977      7 19.156000 22.6920  7.0975  95.7072\n3-1978     3 1978      7 19.440001 20.6938  6.9469  97.3569\n3-19",
        "79     3 1979      7 19.900000 21.2048  6.8565  99.6083\n3-1980     3 1980      7 20.240000 22.1970  6.6547 100.5501\n3-1981     3 1981      7 19.570000 24.8714  6.2136  99.5581\n3-1982     3 1982      7 18.125000 24.8447  5.7146  98.6151\n3-1983     3 1983      7 16.850000 28.9077  7.3431 100.0301\n4-1977     4 1977      8 26.160000 14.8283  8.4902 118.2223\n4-1978     4 1978      8 26.740000 14.8379  8.7420 120.1551\n4-1979     4 1979      8 27.280001 14.8756  9.1869 118.8319\n4-1980     4 1980      8 27.830000 1",
        "5.2332  9.4036 111.9164\n4-1981     4 1981      8 27.169001 17.2529  8.8939  97.5540\n4-1982     4 1982      8 24.504000 19.3142  8.3905  92.1982\n4-1983     4 1983      8 22.562000 20.0055  7.4351  92.4041\n5-1976     5 1976      7 86.677002 20.6323 22.3804  94.8991\n5-1977     5 1977      7 87.099998 18.2782 22.2703  96.5038\n5-1978     5 1978      7 87.000000 18.1369 25.1670  98.8163\n5-1979     5 1979      7 90.400002 18.1896 25.3515 100.4835\n5-1980     5 1980      7 89.199997 19.2893 28.2394 100.1223\n5-1981  ",
        "   5 1981      7 82.699997 19.8242 25.7959  98.5270\n5-1982     5 1982      7 73.699997 19.3873 20.3681  99.5083\n6-1976     6 1976      3  0.748000 23.1889  0.1694 102.7724\n6-1977     6 1977      3  0.766000 20.5393  0.1618 107.0270\n6-1978     6 1978      3  0.762000 20.9387  0.1499 108.6788\n6-1979     6 1979      3  0.729000 21.7626  0.1458 111.1190\n6-1980     6 1980      3  0.731000 23.4707  0.1468 101.9265\n6-1981     6 1981      3  0.779000 24.1252  0.1412  99.4971\n6-1982     6 1982      3  0.782000 25.20",
        "65  0.1261  99.3103\n7-1976     7 1976      3  1.600000 30.8513  0.9934 104.7664\n7-1977     7 1977      3  1.650000 28.5550  0.9330 107.4791\n7-1978     7 1978      3  1.680000 29.8602  0.9650 108.9188\n7-1979     7 1979      3  1.680000 30.5894  0.9629 111.5591\n7-1980     7 1980      3  1.660000 27.4886  0.9224 100.0000\n7-1981     7 1981      3  1.560000 31.4868  0.9992  99.3965\n7-1982     7 1982      3  1.540000 32.0728  0.8802  99.2931\n8-1976     8 1976      3  9.145001 30.9089  4.5486 104.7664\n8-1977     8",
        " 1977      3 10.855000 24.4679  4.6194 107.4791\n8-1978     8 1978      3 10.749000 28.0558  5.0373 108.9188\n8-1979     8 1979      3 10.959000 28.7445  4.8748 111.5591\n8-1980     8 1980      3 10.698000 28.4854  3.2221 100.0000\n8-1981     8 1981      3  8.174000 31.7356  2.8343  99.3965\n8-1982     8 1982      3  4.701000 29.8963  1.7506  99.2931\n9-1976     9 1976      3  2.006000 26.0825  0.3824 102.7724\n9-1977     9 1977      3  2.656000 21.9545  0.4551 107.0270\n9-1978     9 1978      3  2.712000 22.8100  ",
        "0.4529 108.6788\n9-1979     9 1979      3  2.744000 23.3720  0.4524 111.1190\n9-1980     9 1980      3  2.757000 23.0737  0.4676 101.9265\n9-1981     9 1981      3  2.849000 24.3044  0.4810  99.4971\n9-1982     9 1982      3  2.752000 26.8984  0.4753  99.3103\n10-1976   10 1976      7  3.823000 23.3533  1.1293  95.3657\n10-1977   10 1977      7  3.935000 21.3251  1.0143  96.7315\n10-1978   10 1978      7  3.528000 20.9319  1.1169  99.2333\n10-1979   10 1979      7  3.520000 20.4536  1.1626 100.7335\n10-1980   10 198",
        "0      7  3.467000 23.4946  1.0827 100.0000\n10-1981   10 1981      7  3.090000 25.9553  1.0636  98.2324\n10-1982   10 1982      7  3.262000 26.0361  1.0958  99.7635\n11-1976   11 1976      3  1.359000 23.0614  0.4099 104.7664\n11-1977   11 1977      3  1.346000 20.2275  0.5741 107.4791\n11-1978   11 1978      3  1.338000 22.1435  0.5563 108.9188\n11-1979   11 1979      3  1.353000 22.5496  0.5145 111.5591\n11-1980   11 1980      3  1.264000 22.5875  0.5895 100.0000\n11-1981   11 1981      3  1.158000 25.9585  0.48",
        "47  99.3965\n11-1982   11 1982      3  1.175000 24.0345  0.4359  99.2931\n12-1976   12 1976      3  1.780000 34.2991  0.2569 104.7664\n12-1977   12 1977      3  1.643000 30.3979  0.2072 107.4791\n12-1978   12 1978      3  1.390000 31.1431  0.1999 108.9188\n12-1979   12 1979      3  1.350000 33.3105  0.2007 111.5591\n12-1980   12 1980      3  1.082000 30.2147  0.1473 100.0000\n12-1981   12 1981      3  0.780000 29.7414  0.1158  99.3965\n12-1982   12 1982      3  0.680000 31.1235  0.1036  99.2931\n13-1976   13 1976   ",
        "   1  2.353000 22.3833  0.5785 125.8064\n13-1977   13 1977      1  2.386000 23.0607  0.5613 127.9649\n13-1978   13 1978      1  2.375000 23.4931  0.5273 125.4294\n13-1979   13 1979      1  2.415000 26.0042  0.5180 125.0259\n13-1980   13 1980      1  2.266000 24.1671  0.4608 106.3044\n13-1981   13 1981      1  1.777000 26.0573  0.3750  98.0729\n13-1982   13 1982      1  1.537000 28.7064  0.3147  96.8674\n14-1978   14 1978      1  3.165000 20.9113  0.3902 127.3866\n14-1979   14 1979      1  3.096000 21.8887  0.4311 1",
        "24.6424\n14-1980   14 1980      1  2.991000 23.7010  0.4228 118.9132\n14-1981   14 1981      1  2.692000 21.3925  0.3810  99.3576\n14-1982   14 1982      1  2.175000 25.5237  0.3051  97.2428\n14-1983   14 1983      1  1.801000 25.7211  0.2041  97.1944\n14-1984   14 1984      1  1.428000 25.6452  0.1685  99.9862\n15-1977   15 1977      9  7.220000 22.5898  1.8498 105.3355\n15-1978   15 1978      9  7.321000 22.0549  1.9215 108.1833\n15-1979   15 1979      9  7.097000 22.2902  2.1855 110.6984\n15-1980   15 1980      9",
        "  7.201000 20.6808  2.4345 105.9673\n15-1981   15 1981      9  6.602000 21.6151  2.1255  96.5931\n15-1982   15 1982      9  5.311000 23.1551  1.5594  92.0013\n15-1983   15 1983      9  5.394000 25.0999  1.3576  92.2488\n16-1976   16 1976      4  2.757000 29.3517  0.9175 116.4000\n16-1977   16 1977      4  2.632000 27.0686  0.8613 115.7000\n16-1978   16 1978      4  2.647000 27.2752  0.8519 112.8000\n16-1979   16 1979      4  2.687000 26.6444  0.5277 108.9000\n16-1980   16 1980      4  2.417000 25.3591  0.5262 100.0",
        "000\n16-1981   16 1981      4  2.218000 25.2731  0.5660  89.2000\n16-1982   16 1982      4  2.106000 27.4446  0.5112  90.5000\n17-1977   17 1977      1  1.090000 23.9352  0.1282 127.1640\n17-1978   17 1978      1  1.144000 22.6139  0.1393 127.3866\n17-1979   17 1979      1  1.195000 23.0801  0.1795 124.6424\n17-1980   17 1980      1  1.259000 25.0346  0.1835 118.9132\n17-1981   17 1981      1  1.319000 24.2587  0.1731  99.3576\n17-1982   17 1982      1  1.188000 28.4659  0.1471  97.2428\n17-1983   17 1983      1  1.",
        "163000 29.4594  0.1246  97.1944\n18-1977   18 1977      4  7.407000 29.9689  1.1694 116.2250\n18-1978   18 1978      4  7.392000 26.2611  1.2643 114.9750\n18-1979   18 1979      4  7.198000 25.7528  1.3536 111.8250\n18-1980   18 1980      4  6.872000 24.3198  1.5672 106.6750\n18-1981   18 1981      4  6.131000 24.3181  1.3429  97.3000\n18-1982   18 1982      4  5.785000 26.5473  1.1385  89.5250\n18-1983   18 1983      4  5.487000 26.5930  0.9603  89.6000\n19-1976   19 1976      4 23.531000 34.0204  5.4762 116.4000\n",
        "19-1977   19 1977      4 22.521000 30.3191  5.0656 115.7000\n19-1978   19 1978      4 21.865999 29.1920  5.0976 112.8000\n19-1979   19 1979      4 21.066999 28.6365  5.7196 108.9000\n19-1980   19 1980      4 19.238001 29.7144  4.9972 100.0000\n19-1981   19 1981      4 16.247999 31.3375  4.6639  89.2000\n19-1982   19 1982      4 14.928000 33.8528  4.1429  90.5000\n20-1977   20 1977      4  1.053000 28.0450  0.1386 116.2250\n20-1978   20 1978      4  1.117000 26.5632  0.1606 114.9750\n20-1979   20 1979      4  1.1250",
        "00 25.6042  0.1695 111.8250\n20-1980   20 1980      4  1.040000 25.6604  0.2401 106.6750\n20-1981   20 1981      4  0.995000 25.4900  0.2132  97.3000\n20-1982   20 1982      4  0.923000 25.5370  0.2017  89.5250\n20-1983   20 1983      4  0.908000 26.4244  0.1876  89.6000\n21-1977   21 1977      4  1.991000 29.6870  0.4291 116.2250\n21-1978   21 1978      4  2.671000 28.1284  0.5378 114.9750\n [ reached 'max' / getOption(\"max.print\") -- omitted 889 rows ]\n",
        "> ",
        "data[,data$firm==1]",
        "        firm year sector       emp    wage capital   output\n1-1977     1 1977      7  5.041000 13.1516  0.5894  95.7072\n1-1978     1 1978      7  5.600000 12.3018  0.6318  97.3569\n1-1979     1 1979      7  5.015000 12.8395  0.6771  99.6083\n1-1980     1 1980      7  4.715000 13.8039  0.6171 100.5501\n1-1981     1 1981      7  4.093000 14.2897  0.5076  99.5581\n1-1982     1 1982      7  3.166000 14.8681  0.4229  98.6151\n1-1983     1 1983      7  2.936000 13.7784  0.3920 100.0301\n2-1977     2 1977      7 71.3190",
        "00 14.7909 16.9363  95.7072\n2-1978     2 1978      7 70.642998 14.1036 17.2422  97.3569\n2-1979     2 1979      7 70.917999 14.9534 17.5413  99.6083\n2-1980     2 1980      7 72.030998 15.4910 17.6574 100.5501\n2-1981     2 1981      7 73.689003 16.1969 16.7133  99.5581\n2-1982     2 1982      7 72.418999 16.1314 16.2469  98.6151\n2-1983     2 1983      7 68.517998 16.3051 17.3696 100.0301\n3-1977     3 1977      7 19.156000 22.6920  7.0975  95.7072\n3-1978     3 1978      7 19.440001 20.6938  6.9469  97.3569\n3-19",
        "79     3 1979      7 19.900000 21.2048  6.8565  99.6083\n3-1980     3 1980      7 20.240000 22.1970  6.6547 100.5501\n3-1981     3 1981      7 19.570000 24.8714  6.2136  99.5581\n3-1982     3 1982      7 18.125000 24.8447  5.7146  98.6151\n3-1983     3 1983      7 16.850000 28.9077  7.3431 100.0301\n4-1977     4 1977      8 26.160000 14.8283  8.4902 118.2223\n4-1978     4 1978      8 26.740000 14.8379  8.7420 120.1551\n4-1979     4 1979      8 27.280001 14.8756  9.1869 118.8319\n4-1980     4 1980      8 27.830000 1",
        "5.2332  9.4036 111.9164\n4-1981     4 1981      8 27.169001 17.2529  8.8939  97.5540\n4-1982     4 1982      8 24.504000 19.3142  8.3905  92.1982\n4-1983     4 1983      8 22.562000 20.0055  7.4351  92.4041\n5-1976     5 1976      7 86.677002 20.6323 22.3804  94.8991\n5-1977     5 1977      7 87.099998 18.2782 22.2703  96.5038\n5-1978     5 1978      7 87.000000 18.1369 25.1670  98.8163\n5-1979     5 1979      7 90.400002 18.1896 25.3515 100.4835\n5-1980     5 1980      7 89.199997 19.2893 28.2394 100.1223\n5-1981  ",
        "   5 1981      7 82.699997 19.8242 25.7959  98.5270\n5-1982     5 1982      7 73.699997 19.3873 20.3681  99.5083\n6-1976     6 1976      3  0.748000 23.1889  0.1694 102.7724\n6-1977     6 1977      3  0.766000 20.5393  0.1618 107.0270\n6-1978     6 1978      3  0.762000 20.9387  0.1499 108.6788\n6-1979     6 1979      3  0.729000 21.7626  0.1458 111.1190\n6-1980     6 1980      3  0.731000 23.4707  0.1468 101.9265\n6-1981     6 1981      3  0.779000 24.1252  0.1412  99.4971\n6-1982     6 1982      3  0.782000 25.20",
        "65  0.1261  99.3103\n7-1976     7 1976      3  1.600000 30.8513  0.9934 104.7664\n7-1977     7 1977      3  1.650000 28.5550  0.9330 107.4791\n7-1978     7 1978      3  1.680000 29.8602  0.9650 108.9188\n7-1979     7 1979      3  1.680000 30.5894  0.9629 111.5591\n7-1980     7 1980      3  1.660000 27.4886  0.9224 100.0000\n7-1981     7 1981      3  1.560000 31.4868  0.9992  99.3965\n7-1982     7 1982      3  1.540000 32.0728  0.8802  99.2931\n8-1976     8 1976      3  9.145001 30.9089  4.5486 104.7664\n8-1977     8",
        " 1977      3 10.855000 24.4679  4.6194 107.4791\n8-1978     8 1978      3 10.749000 28.0558  5.0373 108.9188\n8-1979     8 1979      3 10.959000 28.7445  4.8748 111.5591\n8-1980     8 1980      3 10.698000 28.4854  3.2221 100.0000\n8-1981     8 1981      3  8.174000 31.7356  2.8343  99.3965\n8-1982     8 1982      3  4.701000 29.8963  1.7506  99.2931\n9-1976     9 1976      3  2.006000 26.0825  0.3824 102.7724\n9-1977     9 1977      3  2.656000 21.9545  0.4551 107.0270\n9-1978     9 1978      3  2.712000 22.8100  ",
        "0.4529 108.6788\n9-1979     9 1979      3  2.744000 23.3720  0.4524 111.1190\n9-1980     9 1980      3  2.757000 23.0737  0.4676 101.9265\n9-1981     9 1981      3  2.849000 24.3044  0.4810  99.4971\n9-1982     9 1982      3  2.752000 26.8984  0.4753  99.3103\n10-1976   10 1976      7  3.823000 23.3533  1.1293  95.3657\n10-1977   10 1977      7  3.935000 21.3251  1.0143  96.7315\n10-1978   10 1978      7  3.528000 20.9319  1.1169  99.2333\n10-1979   10 1979      7  3.520000 20.4536  1.1626 100.7335\n10-1980   10 198",
        "0      7  3.467000 23.4946  1.0827 100.0000\n10-1981   10 1981      7  3.090000 25.9553  1.0636  98.2324\n10-1982   10 1982      7  3.262000 26.0361  1.0958  99.7635\n11-1976   11 1976      3  1.359000 23.0614  0.4099 104.7664\n11-1977   11 1977      3  1.346000 20.2275  0.5741 107.4791\n11-1978   11 1978      3  1.338000 22.1435  0.5563 108.9188\n11-1979   11 1979      3  1.353000 22.5496  0.5145 111.5591\n11-1980   11 1980      3  1.264000 22.5875  0.5895 100.0000\n11-1981   11 1981      3  1.158000 25.9585  0.48",
        "47  99.3965\n11-1982   11 1982      3  1.175000 24.0345  0.4359  99.2931\n12-1976   12 1976      3  1.780000 34.2991  0.2569 104.7664\n12-1977   12 1977      3  1.643000 30.3979  0.2072 107.4791\n12-1978   12 1978      3  1.390000 31.1431  0.1999 108.9188\n12-1979   12 1979      3  1.350000 33.3105  0.2007 111.5591\n12-1980   12 1980      3  1.082000 30.2147  0.1473 100.0000\n12-1981   12 1981      3  0.780000 29.7414  0.1158  99.3965\n12-1982   12 1982      3  0.680000 31.1235  0.1036  99.2931\n13-1976   13 1976   ",
        "   1  2.353000 22.3833  0.5785 125.8064\n13-1977   13 1977      1  2.386000 23.0607  0.5613 127.9649\n13-1978   13 1978      1  2.375000 23.4931  0.5273 125.4294\n13-1979   13 1979      1  2.415000 26.0042  0.5180 125.0259\n13-1980   13 1980      1  2.266000 24.1671  0.4608 106.3044\n13-1981   13 1981      1  1.777000 26.0573  0.3750  98.0729\n13-1982   13 1982      1  1.537000 28.7064  0.3147  96.8674\n14-1978   14 1978      1  3.165000 20.9113  0.3902 127.3866\n14-1979   14 1979      1  3.096000 21.8887  0.4311 1",
        "24.6424\n14-1980   14 1980      1  2.991000 23.7010  0.4228 118.9132\n14-1981   14 1981      1  2.692000 21.3925  0.3810  99.3576\n14-1982   14 1982      1  2.175000 25.5237  0.3051  97.2428\n14-1983   14 1983      1  1.801000 25.7211  0.2041  97.1944\n14-1984   14 1984      1  1.428000 25.6452  0.1685  99.9862\n15-1977   15 1977      9  7.220000 22.5898  1.8498 105.3355\n15-1978   15 1978      9  7.321000 22.0549  1.9215 108.1833\n15-1979   15 1979      9  7.097000 22.2902  2.1855 110.6984\n15-1980   15 1980      9",
        "  7.201000 20.6808  2.4345 105.9673\n15-1981   15 1981      9  6.602000 21.6151  2.1255  96.5931\n15-1982   15 1982      9  5.311000 23.1551  1.5594  92.0013\n15-1983   15 1983      9  5.394000 25.0999  1.3576  92.2488\n16-1976   16 1976      4  2.757000 29.3517  0.9175 116.4000\n16-1977   16 1977      4  2.632000 27.0686  0.8613 115.7000\n16-1978   16 1978      4  2.647000 27.2752  0.8519 112.8000\n16-1979   16 1979      4  2.687000 26.6444  0.5277 108.9000\n16-1980   16 1980      4  2.417000 25.3591  0.5262 100.0",
        "000\n16-1981   16 1981      4  2.218000 25.2731  0.5660  89.2000\n16-1982   16 1982      4  2.106000 27.4446  0.5112  90.5000\n17-1977   17 1977      1  1.090000 23.9352  0.1282 127.1640\n17-1978   17 1978      1  1.144000 22.6139  0.1393 127.3866\n17-1979   17 1979      1  1.195000 23.0801  0.1795 124.6424\n17-1980   17 1980      1  1.259000 25.0346  0.1835 118.9132\n17-1981   17 1981      1  1.319000 24.2587  0.1731  99.3576\n17-1982   17 1982      1  1.188000 28.4659  0.1471  97.2428\n17-1983   17 1983      1  1.",
        "163000 29.4594  0.1246  97.1944\n18-1977   18 1977      4  7.407000 29.9689  1.1694 116.2250\n18-1978   18 1978      4  7.392000 26.2611  1.2643 114.9750\n18-1979   18 1979      4  7.198000 25.7528  1.3536 111.8250\n18-1980   18 1980      4  6.872000 24.3198  1.5672 106.6750\n18-1981   18 1981      4  6.131000 24.3181  1.3429  97.3000\n18-1982   18 1982      4  5.785000 26.5473  1.1385  89.5250\n18-1983   18 1983      4  5.487000 26.5930  0.9603  89.6000\n19-1976   19 1976      4 23.531000 34.0204  5.4762 116.4000\n",
        "19-1977   19 1977      4 22.521000 30.3191  5.0656 115.7000\n19-1978   19 1978      4 21.865999 29.1920  5.0976 112.8000\n19-1979   19 1979      4 21.066999 28.6365  5.7196 108.9000\n19-1980   19 1980      4 19.238001 29.7144  4.9972 100.0000\n19-1981   19 1981      4 16.247999 31.3375  4.6639  89.2000\n19-1982   19 1982      4 14.928000 33.8528  4.1429  90.5000\n20-1977   20 1977      4  1.053000 28.0450  0.1386 116.2250\n20-1978   20 1978      4  1.117000 26.5632  0.1606 114.9750\n20-1979   20 1979      4  1.1250",
        "00 25.6042  0.1695 111.8250\n20-1980   20 1980      4  1.040000 25.6604  0.2401 106.6750\n20-1981   20 1981      4  0.995000 25.4900  0.2132  97.3000\n20-1982   20 1982      4  0.923000 25.5370  0.2017  89.5250\n20-1983   20 1983      4  0.908000 26.4244  0.1876  89.6000\n21-1977   21 1977      4  1.991000 29.6870  0.4291 116.2250\n21-1978   21 1978      4  2.671000 28.1284  0.5378 114.9750\n [ reached 'max' / getOption(\"max.print\") -- omitted 889 rows ]\n",
        "> ",
        "data$firm==1",
        "   [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [17] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [33] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [65] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FAL",
        "SE\n  [81] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n  [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [113] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [129] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ",
        "FALSE\n [161] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [177] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [193] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [209] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [225] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FAL",
        "SE FALSE\n [241] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [257] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [273] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [289] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [305] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ",
        "FALSE FALSE\n [321] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [337] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [353] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [369] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [385] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FAL",
        "SE FALSE FALSE\n [401] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [417] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [433] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [449] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [465] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ",
        "FALSE FALSE FALSE\n [481] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [497] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [513] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [529] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [545] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FAL",
        "SE FALSE FALSE FALSE\n [561] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [577] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [593] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [609] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [625] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ",
        "FALSE FALSE FALSE FALSE\n [641] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [657] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [673] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [689] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [705] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FAL",
        "SE FALSE FALSE FALSE FALSE\n [721] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [737] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [753] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [769] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [785] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ",
        "FALSE FALSE FALSE FALSE FALSE\n [801] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [817] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [833] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [849] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [865] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FAL",
        "SE FALSE FALSE FALSE FALSE FALSE\n [881] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [897] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [913] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [929] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [945] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ",
        "FALSE FALSE FALSE FALSE FALSE FALSE\n [961] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [977] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [993] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [ reached getOption(\"max.print\") -- omitted 31 entries ]\n",
        "> ",
        "data[data$firm==1,]",
        "       firm year sector   emp    wage capital   output\n1-1977    1 1977      7 5.041 13.1516  0.5894  95.7072\n1-1978    1 1978      7 5.600 12.3018  0.6318  97.3569\n1-1979    1 1979      7 5.015 12.8395  0.6771  99.6083\n1-1980    1 1980      7 4.715 13.8039  0.6171 100.5501\n1-1981    1 1981      7 4.093 14.2897  0.5076  99.5581\n1-1982    1 1982      7 3.166 14.8681  0.4229  98.6151\n1-1983    1 1983      7 2.936 13.7784  0.3920 100.0301\n",
        "> ",
        "lm(formula, data[data$firm==1,])",
        "Error in if (k != round(k)) { : the condition has length > 1\n",
        "> ",
        "data[data$firm==1,]",
        "       firm year sector   emp    wage capital   output\n1-1977    1 1977      7 5.041 13.1516  0.5894  95.7072\n1-1978    1 1978      7 5.600 12.3018  0.6318  97.3569\n1-1979    1 1979      7 5.015 12.8395  0.6771  99.6083\n1-1980    1 1980      7 4.715 13.8039  0.6171 100.5501\n1-1981    1 1981      7 4.093 14.2897  0.5076  99.5581\n1-1982    1 1982      7 3.166 14.8681  0.4229  98.6151\n1-1983    1 1983      7 2.936 13.7784  0.3920 100.0301\n",
        "> ",
        "plm(formula, data[data$firm==1,]",
        "+ ",
        ",",
        "+ > ",
        "  zz_pooling <- plm(formula, data, model = \"pooling\", ...)",
        "Error: '...' used in an incorrect context\n",
        "> ",
        "zz_pooling <- plm(formula, data, model = \"pooling\"",
        "+ ",
        ")",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  0 (non-NA) cases\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)\n",
        "> ",
        "formula",
        "log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1) + lag(log(capital), \n    0:2) + lag(log(output), 0:2) | lag(log(emp), 2:99)\n",
        "> ",
        "lag(log(data[,\"emp\"]), 1:2)",
        "                    1            2\n1-1977             NA           NA\n1-1978    1.617604455           NA\n1-1979    1.722766580  1.617604455\n1-1980    1.612433401  1.722766580\n1-1981    1.550748959  1.612433401\n1-1982    1.409278173  1.550748959\n1-1983    1.152468930  1.409278173\n2-1977             NA           NA\n2-1978    4.267162772           NA\n2-1979    4.257638996  4.267162772\n2-1980    4.261524266  4.257638996\n2-1981    4.277096554  4.261524266\n2-1982    4.299853575  4.277096554\n2-1983    4.282468682 ",
        " 4.299853575\n3-1977             NA           NA\n3-1978    2.952615982           NA\n3-1979    2.967332850  2.952615982\n3-1980    2.990719732  2.967332850\n3-1981    3.007660844  2.990719732\n3-1982    2.973997781  3.007660844\n3-1983    2.897292201  2.973997781\n4-1977             NA           NA\n4-1978    3.264231527           NA\n4-1979    3.286160572  3.264231527\n4-1980    3.306153870  3.286160572\n4-1981    3.326114576  3.306153870\n4-1982    3.302076654  3.326114576\n4-1983    3.198836370  3.302076654\n5-1976   ",
        "          NA           NA\n5-1977    4.462188589           NA\n5-1978    4.467056861  4.462188589\n5-1979    4.465908119  4.467056861\n5-1980    4.504244290  4.465908119\n5-1981    4.490881006  4.504244290\n5-1982    4.415219566  4.490881006\n6-1976             NA           NA\n6-1977   -0.290352261           NA\n6-1978   -0.266573148 -0.290352261\n6-1979   -0.271808697 -0.266573148\n6-1980   -0.316081588 -0.271808697\n6-1981   -0.313341806 -0.316081588\n6-1982   -0.249744259 -0.313341806\n7-1976             NA          ",
        " NA\n7-1977    0.470003629           NA\n7-1978    0.500775288  0.470003629\n7-1979    0.518793734  0.500775288\n7-1980    0.518793734  0.518793734\n7-1981    0.506817602  0.518793734\n7-1982    0.444685757  0.506817602\n8-1976             NA           NA\n8-1977    2.213207337           NA\n8-1978    2.384625803  2.213207337\n8-1979    2.374812727  2.384625803\n8-1980    2.394161036  2.374812727\n8-1981    2.370056808  2.394161036\n8-1982    2.100958361  2.370056808\n9-1976             NA           NA\n9-1977    0.696142",
        "690           NA\n9-1978    0.976821194  0.696142690\n9-1979    0.997686333  0.976821194\n9-1980    1.009416710  0.997686333\n9-1981    1.014143132  1.009416710\n9-1982    1.046968056  1.014143132\n10-1976            NA           NA\n10-1977   1.341035455           NA\n10-1978   1.369910856  1.341035455\n10-1979   1.260731166  1.369910856\n10-1980   1.258460990  1.260731166\n10-1981   1.243289667  1.258460990\n10-1982   1.128171059  1.243289667\n11-1976            NA           NA\n11-1977   0.306749135           NA\n11-19",
        "78   0.297137231  0.306749135\n11-1979   0.291176036  0.297137231\n11-1980   0.302324349  0.291176036\n11-1981   0.234281375  0.302324349\n11-1982   0.146694379  0.234281375\n12-1976            NA           NA\n12-1977   0.576613364           NA\n12-1978   0.496523839  0.576613364\n12-1979   0.329303747  0.496523839\n12-1980   0.300104592  0.329303747\n12-1981   0.078811180  0.300104592\n12-1982  -0.248461398  0.078811180\n13-1976            NA           NA\n13-1977   0.855691067           NA\n13-1978   0.869618282  0.85",
        "5691067\n13-1979   0.864997437  0.869618282\n13-1980   0.881699287  0.864997437\n13-1981   0.818016163  0.881699287\n13-1982   0.574926549  0.818016163\n14-1978            NA           NA\n14-1979   1.152153056           NA\n14-1980   1.130110956  1.152153056\n14-1981   1.095607746  1.130110956\n14-1982   0.990284375  1.095607746\n14-1983   0.777028665  0.990284375\n14-1984   0.588342066  0.777028665\n15-1977            NA           NA\n15-1978   1.976854925           NA\n15-1979   1.990746944  1.976854925\n15-1980   1.95",
        "9672174  1.990746944\n15-1981   1.974219933  1.959672174\n15-1982   1.887372664  1.974219933\n15-1983   1.669780123  1.887372664\n16-1976            NA           NA\n16-1977   1.014143132           NA\n16-1978   0.967744013  1.014143132\n16-1979   0.973426961  0.967744013\n16-1980   0.988425330  0.973426961\n16-1981   0.882527143  0.988425330\n16-1982   0.796605844  0.882527143\n17-1977            NA           NA\n17-1978   0.086177696           NA\n17-1979   0.134530980  0.086177696\n17-1980   0.178146269  0.134530980\n1",
        "7-1981   0.230317676  0.178146269\n17-1982   0.276873874  0.230317676\n17-1983   0.172271221  0.276873874\n18-1977            NA           NA\n18-1978   2.002425513           NA\n18-1979   2.000398361  2.002425513\n18-1980   1.973803210  2.000398361\n18-1981   1.927455214  1.973803210\n18-1982   1.813357869  1.927455214\n18-1983   1.755268326  1.813357869\n19-1976            NA           NA\n19-1977   3.158318701           NA\n19-1978   3.114448207  3.158318701\n19-1979   3.084932873  3.114448207\n19-1980   3.047707788  ",
        "3.084932873\n19-1981   2.956887542  3.047707788\n19-1982   2.787969763  2.956887542\n20-1977            NA           NA\n20-1978   0.051643233           NA\n20-1979   0.110646520  0.051643233\n20-1980   0.117783036  0.110646520\n20-1981   0.039220713  0.117783036\n20-1982  -0.005012542  0.039220713\n20-1983  -0.080126066 -0.005012542\n21-1977            NA           NA\n21-1978   0.688637075           NA\n21-1979   0.982452934  0.688637075\n21-1980   1.077388652  0.982452934\n21-1981   1.103599863  1.077388652\n21-1982   ",
        "0.993622075  1.103599863\n21-1983   0.597186789  0.993622075\n22-1976            NA           NA\n22-1977   0.336472237           NA\n22-1978   0.373630316  0.336472237\n22-1979   0.421994410  0.373630316\n22-1980   0.444044590  0.421994410\n22-1981   0.436963775  0.444044590\n22-1982   0.291923067  0.436963775\n23-1976            NA           NA\n23-1977   2.356599681           NA\n23-1978   2.312040252  2.356599681\n23-1979   2.186051232  2.312040252\n23-1980   2.144643858  2.186051232\n23-1981   1.863770005  2.1446438",
        "58\n23-1982   1.687324488  1.863770005\n24-1976            NA           NA\n24-1977   0.515215972           NA\n24-1978   0.576613364  0.515215972\n24-1979   0.597186789  0.576613364\n24-1980   0.585005022  0.597186789\n24-1981   0.539413081  0.585005022\n24-1982   0.258510695  0.539413081\n25-1976            NA           NA\n25-1977  -0.258770716           NA\n25-1978  -0.238257202 -0.258770716\n25-1979  -0.198450951 -0.238257202\n25-1980  -0.197232194 -0.198450951\n25-1981  -0.188742113 -0.197232194\n25-1982  -0.2094872",
        "37 -0.188742113\n26-1976            NA           NA\n26-1977   1.126875754           NA\n26-1978   1.194225483  1.126875754\n26-1979   1.217579778  1.194225483\n26-1980   1.199663533  1.217579778\n26-1981   1.142310176  1.199663533\n26-1982   0.996948635  1.142310176\n27-1978            NA           NA\n27-1979   1.883274548           NA\n27-1980   1.852697752  1.883274548\n27-1981   1.749547603  1.852697752\n27-1982   1.583093917  1.749547603\n27-1983   1.482740305  1.583093917\n27-1984   1.992521083  1.482740305\n28-197",
        "7            NA           NA\n28-1978  -0.479649974           NA\n28-1979  -0.320205250 -0.479649974\n28-1980  -0.257476230 -0.320205250\n28-1981  -0.343899767 -0.257476230\n28-1982  -0.429245606 -0.343899767\n28-1983  -0.652005180 -0.429245606\n29-1977            NA           NA\n29-1978   0.104360015           NA\n29-1979   0.130150772  0.104360015\n29-1980   0.178982656  0.130150772\n29-1981   0.211880278  0.178982656\n29-1982   0.052592450  0.211880278\n29-1983  -0.062939789  0.052592450\n30-1976            NA       ",
        "    NA\n30-1977   0.121332197           NA\n30-1978   0.166361537  0.121332197\n30-1979   0.162118849  0.166361537\n30-1980   0.173112618  0.162118849\n30-1981   0.138891999  0.173112618\n30-1982  -0.043951867  0.138891999\n31-1976            NA           NA\n31-1977   0.582774123           NA\n31-1978   0.590560536  0.582774123\n31-1979   0.724161234  0.590560536\n31-1980   0.685115009  0.724161234\n31-1981   0.443402947  0.685115009\n31-1982   0.250758718  0.443402947\n32-1977            NA           NA\n32-1978   0.571",
        "544359           NA\n32-1979   0.581097677  0.571544359\n32-1980   0.621113924  0.581097677\n32-1981   0.622724716  0.621113924\n32-1982   0.509224342  0.622724716\n32-1983   0.412771683  0.509224342\n33-1976            NA           NA\n33-1977   2.589942113           NA\n33-1978   2.603356130  2.589942113\n33-1979   2.599127794  2.603356130\n33-1980   2.463938343  2.599127794\n33-1981   2.370804332  2.463938343\n33-1982   2.177135254  2.370804332\n34-1977            NA           NA\n34-1978   0.194744077           NA\n34",
        "-1979   0.266969031  0.194744077\n34-1980   0.330022913  0.266969031\n34-1981   0.341459707  0.330022913\n34-1982   0.144965770  0.341459707\n34-1983   0.177309015  0.144965770\n35-1977            NA           NA\n35-1978   1.681386430           NA\n35-1979   1.769002448  1.681386430\n35-1980   1.802699409  1.769002448\n35-1981   1.905683216  1.802699409\n35-1982   2.648653991  1.905683216\n35-1983   2.538605382  2.648653991\n36-1976            NA           NA\n36-1977  -0.752897206           NA\n36-1978  -0.738144567 -0",
        ".752897206\n36-1979  -0.816445397 -0.738144567\n36-1980  -0.796287917 -0.816445397\n36-1981  -0.889162040 -0.796287917\n36-1982  -0.951917884 -0.889162040\n37-1977            NA           NA\n37-1978   2.667228207           NA\n37-1979   2.689139176  2.667228207\n37-1980   2.669794356  2.689139176\n37-1981   2.597937672  2.669794356\n37-1982   2.459332399  2.597937672\n37-1983   2.306577114  2.459332399\n38-1976            NA           NA\n38-1977   2.009287309           NA\n38-1978   2.064327917  2.009287309\n38-1979   2",
        ".110819089  2.064327917\n38-1980   2.099489200  2.110819089\n38-1981   2.008482466  2.099489200\n38-1982   1.780530004  2.008482466\n39-1977            NA           NA\n39-1978   0.394741145           NA\n39-1979   0.438899884  0.394741145\n39-1980   0.442118426  0.438899884\n39-1981   0.485507816  0.442118426\n39-1982   0.341459707  0.485507816\n39-1983  -0.205794901  0.341459707\n40-1976            NA           NA\n40-1977   2.577409863           NA\n40-1978   2.556762087  2.577409863\n40-1979   2.498891734  2.55676208",
        "7\n40-1980   2.516082267  2.498891734\n40-1981   2.538605382  2.516082267\n40-1982   2.544432629  2.538605382\n41-1977            NA           NA\n41-1978   2.520032452           NA\n41-1979   2.655633469  2.520032452\n41-1980   2.690361338  2.655633469\n41-1981   2.696584723  2.690361338\n41-1982   2.702099196  2.696584723\n41-1983   2.626406212  2.702099196\n42-1976            NA           NA\n42-1977   0.205386830           NA\n42-1978   0.590560536  0.205386830\n42-1979   0.544066958  0.590560536\n42-1980   0.57605140",
        "9  0.544066958\n42-1981   0.273075920  0.576051409\n42-1982  -0.358104537  0.273075920\n43-1977            NA           NA\n43-1978   2.490888721           NA\n43-1979   2.882507527  2.490888721\n43-1980   2.873508084  2.882507527\n43-1981   2.885861658  2.873508084\n43-1982   2.396348623  2.885861658\n43-1983   2.290714920  2.396348623\n44-1977            NA           NA\n44-1978  -0.247180104           NA\n44-1979  -0.174353423 -0.247180104\n44-1980  -0.126697676 -0.174353423\n44-1981  -0.145025760 -0.126697676\n44-1982",
        "  -0.341082807 -0.145025760\n44-1983  -0.529329112 -0.341082807\n45-1977            NA           NA\n45-1978   3.474757616           NA\n45-1979   3.523886879  3.474757616\n45-1980   3.537736746  3.523886879\n45-1981   3.506997801  3.537736746\n45-1982   3.435083378  3.506997801\n45-1983   3.266751285  3.435083378\n46-1976            NA           NA\n46-1977   1.088898596           NA\n46-1978   1.120047602  1.088898596\n46-1979   1.108562620  1.120047602\n46-1980   1.085189268  1.108562620\n46-1981   0.938834657  1.0851",
        "89268\n46-1982   0.818016163  0.938834657\n47-1976            NA           NA\n47-1977   0.886243852           NA\n47-1978   0.761739972  0.886243852\n47-1979   0.679555227  0.761739972\n47-1980   0.584447764  0.679555227\n47-1981   0.440188544  0.584447764\n47-1982   0.202940844  0.440188544\n48-1976            NA           NA\n48-1977   0.498955451           NA\n48-1978   0.848868013  0.498955451\n48-1979   0.872547767  0.848868013\n48-1980   0.856116051  0.872547767\n48-1981   0.827240871  0.856116051\n48-1982   0.7153",
        "97838  0.827240871\n49-1976            NA           NA\n49-1977   1.323886874           NA\n49-1978   1.306168290  1.323886874\n49-1979   1.313992449  1.306168290\n49-1980   1.308062486  1.313992449\n49-1981   1.237504288  1.308062486\n49-1982   1.042394609  1.237504288\n50-1976            NA           NA\n50-1977   4.288567241           NA\n50-1978   4.294437818  4.288567241\n50-1979   4.259477614  4.294437818\n50-1980   4.284165704  4.259477614\n50-1981   4.171351914  4.284165704\n50-1982   3.877679977  4.171351914\n51-",
        "1976            NA           NA\n51-1977  -0.265268452           NA\n51-1978  -0.279713929 -0.265268452\n51-1979  -0.321583597 -0.279713929\n51-1980  -0.400477537 -0.321583597\n51-1981  -0.438504993 -0.400477537\n51-1982  -0.579818495 -0.438504993\n52-1976            NA           NA\n52-1977   2.651761997           NA\n52-1978   2.654930679  2.651761997\n52-1979   2.636554199  2.654930679\n52-1980   2.611172126  2.636554199\n52-1981   2.511954211  2.611172126\n52-1982   2.351851334  2.511954211\n53-1977            NA    ",
        "       NA\n53-1978   1.928327883           NA\n53-1979   1.938309912  1.928327883\n53-1980   1.930796511  1.938309912\n53-1981   1.884946184  1.930796511\n53-1982   1.726153712  1.884946184\n53-1983   1.544365894  1.726153712\n54-1977            NA           NA\n54-1978   1.335527244           NA\n54-1979   1.413179739  1.335527244\n54-1980   1.437700149  1.413179739\n54-1981   1.424553097  1.437700149\n54-1982   1.324152991  1.424553097\n54-1983   1.116124714  1.324152991\n55-1976            NA           NA\n55-1977   1.",
        "701469980           NA\n55-1978   1.876100602  1.701469980\n55-1979   1.931666329  1.876100602\n55-1980   1.975191548  1.931666329\n55-1981   1.871955996  1.975191548\n55-1982   1.757857952  1.871955996\n56-1976            NA           NA\n56-1977   1.066777531           NA\n56-1978   1.107902369  1.066777531\n56-1979   1.093599713  1.107902369\n56-1980   1.056748119  1.093599713\n56-1981   0.960116211  1.056748119\n56-1982   0.760805876  0.960116211\n57-1977            NA           NA\n57-1978   0.716863756           NA",
        "\n57-1979   0.769181867  0.716863756\n57-1980   0.698632061  0.769181867\n57-1981   0.629674758  0.698632061\n57-1982  -0.022245619  0.629674758\n57-1983  -0.177931197 -0.022245619\n58-1976            NA           NA\n58-1977   3.036874217           NA\n58-1978   3.122585165  3.036874217\n58-1979   3.171574510  3.122585165\n58-1980   3.138663103  3.171574510\n58-1981   3.021400020  3.138663103\n58-1982   2.803299834  3.021400020\n59-1977            NA           NA\n59-1978   2.287369927           NA\n59-1979   2.261554702",
        "  2.287369927\n59-1980   2.190871081  2.261554702\n59-1981   2.022077211  2.190871081\n59-1982   1.763702889  2.022077211\n59-1983   1.556669847  1.763702889\n60-1976            NA           NA\n60-1977   1.134622694           NA\n60-1978   0.137149838  1.134622694\n60-1979  -0.277071867  0.137149838\n60-1980  -0.262664322 -0.277071867\n60-1981  -0.313341806 -0.262664322\n60-1982  -0.002001973 -0.313341806\n61-1977            NA           NA\n61-1978   0.907855293           NA\n61-1979   0.917490012  0.907855293\n61-1980 ",
        "  0.950112280  0.917490012\n61-1981   0.960116211  0.950112280\n61-1982   0.802449871  0.960116211\n61-1983   0.602675277  0.802449871\n62-1977            NA           NA\n62-1978   1.016317046           NA\n62-1979   0.989541231  1.016317046\n62-1980   0.974936927  0.989541231\n62-1981   0.929009544  0.974936927\n62-1982   0.810040888  0.929009544\n62-1983   0.565881830  0.810040888\n63-1976            NA           NA\n63-1977  -0.208254963           NA\n63-1978  -0.187535124 -0.208254963\n63-1979  -0.149660775 -0.18753",
        "5124\n63-1980  -0.154317372 -0.149660775\n63-1981  -0.142716325 -0.154317372\n63-1982  -0.171975253 -0.142716325\n64-1976            NA           NA\n64-1977   2.205413225           NA\n64-1978   2.257796942  2.205413225\n64-1979   2.250027832  2.257796942\n64-1980   2.260720910  2.250027832\n64-1981   2.238579774  2.260720910\n64-1982   2.123219140  2.238579774\n65-1976            NA           NA\n65-1977   3.223106901           NA\n65-1978   3.178845142  3.223106901\n65-1979   3.181423106  3.178845142\n65-1980   3.16496",
        "8591  3.181423106\n65-1981   3.079107882  3.164968591\n65-1982   2.922354750  3.079107882\n66-1977            NA           NA\n66-1978   2.140066163           NA\n66-1979   2.140066163  2.140066163\n66-1980   2.116255539  2.140066163\n66-1981   2.116255539  2.116255539\n66-1982   2.041220303  2.116255539\n66-1983   1.945910149  2.041220303\n67-1976            NA           NA\n67-1977   2.455992640           NA\n67-1978   2.507238755  2.455992640\n67-1979   2.505607566  2.507238755\n67-1980   2.469793012  2.505607566\n67-1",
        "981   2.387477560  2.469793012\n67-1982   2.261763140  2.387477560\n68-1976            NA           NA\n68-1977   1.319085611           NA\n68-1978   1.329194796  1.319085611\n68-1979   1.337891648  1.329194796\n68-1980   1.490654399  1.337891648\n68-1981   1.841818685  1.490654399\n68-1982   1.768320255  1.841818685\n69-1977            NA           NA\n69-1978   0.240590465           NA\n69-1979   0.256191483  0.240590465\n69-1980   0.326421901  0.256191483\n69-1981   0.378436436  0.326421901\n69-1982   0.300845059  0.3",
        "78436436\n69-1983   0.311154429  0.300845059\n70-1977            NA           NA\n70-1978   0.974182173           NA\n70-1979   0.918288774  0.974182173\n70-1980   0.876717998  0.918288774\n70-1981   0.809595993  0.876717998\n70-1982   0.616805947  0.809595993\n70-1983   0.279145741  0.616805947\n71-1976            NA           NA\n71-1977   0.470003629           NA\n71-1978   0.356974899  0.470003629\n71-1979   0.473123757  0.356974899\n71-1980   0.586674936  0.473123757\n71-1981   0.461215123  0.586674936\n71-1982   0.0",
        "10939940  0.461215123\n72-1976            NA           NA\n72-1977   2.591741079           NA\n72-1978   2.505934017  2.591741079\n [ reached getOption(\"max.print\") -- omitted 531 rows ]\n",
        "> ",
        "plm(formula, data, model = \"pooling\"",
        "+ ",
        ")",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  0 (non-NA) cases\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)\n",
        "> ",
        "data(\"Gasoline\", package = \"plm\")",
        "> ",
        "Gasoline2 <- Gasoline",
        "> ",
        "Gasoline2",
        "    country year lgaspcar  lincomep       lrpmg   lcarpcap\n1   AUSTRIA 1960 4.173244 -6.474277 -0.33454761  -9.766840\n2   AUSTRIA 1961 4.100989 -6.426006 -0.35132761  -9.608622\n3   AUSTRIA 1962 4.073177 -6.407308 -0.37951769  -9.457257\n4   AUSTRIA 1963 4.059509 -6.370679 -0.41425139  -9.343155\n5   AUSTRIA 1964 4.037689 -6.322247 -0.44533536  -9.237739\n6   AUSTRIA 1965 4.033983 -6.294668 -0.49706066  -9.123903\n7   AUSTRIA 1966 4.047537 -6.252545 -0.46683773  -9.019822\n8   AUSTRIA 1967 4.052911 -6.234581 -0.5",
        "0588340  -8.934403\n9   AUSTRIA 1968 4.045507 -6.206894 -0.52241255  -8.847967\n10  AUSTRIA 1969 4.046355 -6.153140 -0.55911051  -8.788686\n11  AUSTRIA 1970 4.080888 -6.081712 -0.59656122  -8.728200\n12  AUSTRIA 1971 4.106720 -6.043626 -0.65445914  -8.635898\n13  AUSTRIA 1972 4.128018 -5.981052 -0.59633184  -8.538338\n14  AUSTRIA 1973 4.199381 -5.895153 -0.59444681  -8.487289\n15  AUSTRIA 1974 4.018495 -5.852381 -0.46602693  -8.430404\n16  AUSTRIA 1975 4.029018 -5.869363 -0.45414221  -8.382815\n17  AUSTRIA 1976 3.98",
        "5412 -5.811703 -0.50008372  -8.322232\n18  AUSTRIA 1977 3.931676 -5.833288 -0.42191563  -8.249563\n19  AUSTRIA 1978 3.922750 -5.762023 -0.46960312  -8.211041\n20  BELGIUM 1960 4.164016 -6.215091 -0.16570961  -9.405527\n21  BELGIUM 1961 4.124356 -6.176843 -0.17173098  -9.303149\n22  BELGIUM 1962 4.075962 -6.129638 -0.22229138  -9.218070\n23  BELGIUM 1963 4.001266 -6.094019 -0.25046225  -9.114932\n24  BELGIUM 1964 3.994375 -6.036461 -0.27591057  -9.005491\n25  BELGIUM 1965 3.951531 -6.007252 -0.34493695  -8.862581\n26",
        "  BELGIUM 1966 3.820538 -5.994108 -0.23639770  -8.754527\n27  BELGIUM 1967 3.906878 -5.964812 -0.26699499  -8.748827\n28  BELGIUM 1968 3.828665 -5.924693 -0.31116076  -8.576513\n29  BELGIUM 1969 3.854601 -5.857532 -0.35480852  -8.521453\n30  BELGIUM 1970 3.870392 -5.797201 -0.37794044  -8.453043\n31  BELGIUM 1971 3.872245 -5.761050 -0.39922992  -8.409457\n32  BELGIUM 1972 3.905402 -5.710230 -0.31064584  -8.362588\n33  BELGIUM 1973 3.895996 -5.644145 -0.37309192  -8.314447\n34  BELGIUM 1974 3.818230 -5.600727 -0.362",
        "23563  -8.270595\n35  BELGIUM 1975 3.877778 -5.623003 -0.36430848  -8.228848\n36  BELGIUM 1976 3.864146 -5.567193 -0.37896584  -8.184134\n37  BELGIUM 1977 3.854311 -5.556697 -0.43164133  -8.138534\n38  BELGIUM 1978 3.842742 -5.532940 -0.59094964  -8.104741\n39   CANADA 1960 4.855238 -5.889713 -0.97210650  -8.378917\n40   CANADA 1961 4.826555 -5.884344 -0.97229024  -8.346729\n41   CANADA 1962 4.850533 -5.844552 -0.97860756  -8.320512\n42   CANADA 1963 4.838080 -5.792352 -1.01904791  -8.269422\n43   CANADA 1964 4.8397",
        "60 -5.760063 -1.00285696  -8.252404\n44   CANADA 1965 4.850828 -5.722822 -1.01712549  -8.223621\n45   CANADA 1966 4.871025 -5.671784 -1.01694436  -8.201236\n46   CANADA 1967 4.852499 -5.608481 -1.02359713  -8.156076\n47   CANADA 1968 4.868782 -5.573924 -1.01984524  -8.123188\n48   CANADA 1969 4.864433 -5.560853 -1.03686389  -8.095113\n49   CANADA 1970 4.899570 -5.514763 -1.06733308  -8.080028\n50   CANADA 1971 4.895075 -5.479919 -1.05803676  -8.039264\n51   CANADA 1972 4.889302 -5.436603 -1.09966703  -7.989531\n52  ",
        " CANADA 1973 4.899694 -5.414753 -1.13316142  -7.942140\n53   CANADA 1974 4.891591 -5.418456 -1.12379997  -7.900758\n54   CANADA 1975 4.888471 -5.379097 -1.18568427  -7.873313\n55   CANADA 1976 4.837359 -5.361285 -1.06179659  -7.808425\n56   CANADA 1977 4.810992 -5.336967 -1.07084448  -7.768793\n57   CANADA 1978 4.855846 -5.311272 -1.07495073  -7.788061\n58  DENMARK 1960 4.501986 -6.061726 -0.19570260  -9.326161\n59  DENMARK 1961 4.482846 -6.000897 -0.25361844  -9.193136\n60  DENMARK 1962 4.385449 -5.987477 -0.21875",
        "400  -9.047284\n61  DENMARK 1963 4.353997 -5.973060 -0.24800936  -8.952783\n62  DENMARK 1964 4.326436 -5.894741 -0.30654923  -8.852607\n63  DENMARK 1965 4.249454 -5.859356 -0.32701542  -8.761954\n64  DENMARK 1966 4.233643 -5.851866 -0.39618846  -8.681541\n65  DENMARK 1967 4.203466 -5.823064 -0.44257369  -8.602121\n66  DENMARK 1968 4.161687 -5.792260 -0.35204752  -8.533774\n67  DENMARK 1969 4.173561 -5.722769 -0.40687922  -8.470459\n68  DENMARK 1970 4.128807 -5.708307 -0.44046082  -8.427060\n69  DENMARK 1971 4.103146",
        " -5.676820 -0.45473954  -8.369399\n70  DENMARK 1972 4.082808 -5.645991 -0.49918863  -8.334673\n71  DENMARK 1973 4.137438 -5.595862 -0.43257185  -8.304602\n72  DENMARK 1974 4.000461 -5.594866 -0.42517720  -8.300177\n73  DENMARK 1975 4.033015 -5.612967 -0.39395431  -8.274632\n74  DENMARK 1976 4.007739 -5.553939 -0.35361534  -8.244087\n75  DENMARK 1977 4.005290 -5.538730 -0.35690917  -8.219858\n76  DENMARK 1978 4.036601 -5.483074 -0.29068135  -8.195805\n77   FRANCE 1960 3.907704 -6.264363 -0.01959833  -9.145706\n78   F",
        "RANCE 1961 3.885623 -6.220883 -0.02386000  -9.044253\n79   FRANCE 1962 3.823666 -6.173592 -0.06892022  -8.930133\n80   FRANCE 1963 3.788997 -6.137060 -0.13792900  -8.818632\n81   FRANCE 1964 3.767084 -6.087237 -0.19784646  -8.710965\n82   FRANCE 1965 3.760584 -6.048528 -0.23365325  -8.629390\n83   FRANCE 1966 3.749535 -6.000836 -0.26427164  -8.545771\n84   FRANCE 1967 3.768621 -5.955660 -0.29405795  -8.487370\n85   FRANCE 1968 3.778230 -5.901380 -0.32316179  -8.425551\n86   FRANCE 1969 3.773460 -5.840774 -0.3151908",
        "7  -8.369136\n87   FRANCE 1970 3.801583 -5.784181 -0.33384616  -8.327089\n88   FRANCE 1971 3.825962 -5.743144 -0.37945667  -8.279522\n89   FRANCE 1972 3.846677 -5.699107 -0.40781642  -8.222764\n90   FRANCE 1973 3.884994 -5.655065 -0.47503429  -8.183905\n91   FRANCE 1974 3.807995 -5.630096 -0.21698191  -8.160328\n92   FRANCE 1975 3.808549 -5.633271 -0.25838174  -8.145466\n93   FRANCE 1976 3.908116 -5.588335 -0.24651309  -8.110406\n94   FRANCE 1977 3.812500 -5.563418 -0.22550681  -8.064147\n95   FRANCE 1978 3.788883 -",
        "5.530247 -0.38075942  -8.005655\n96  GERMANY 1960 3.916953 -6.159837 -0.18591078  -9.342481\n97  GERMANY 1961 3.885345 -6.120923 -0.23095384  -9.183841\n98  GERMANY 1962 3.871484 -6.094258 -0.34384171  -9.037280\n99  GERMANY 1963 3.848782 -6.068361 -0.37464672  -8.913630\n100 GERMANY 1964 3.868993 -6.013442 -0.39965256  -8.811013\n101 GERMANY 1965 3.861049 -5.966469 -0.43987825  -8.711888\n102 GERMANY 1966 3.880741 -5.949068 -0.54000197  -8.631192\n103 GERMANY 1967 3.875032 -5.960041 -0.54998139  -8.576013\n104 GERM",
        "ANY 1968 3.889362 -5.883414 -0.43824222  -8.515865\n105 GERMANY 1969 3.899185 -5.829641 -0.58923137  -8.438061\n106 GERMANY 1970 3.902520 -5.767374 -0.63329520  -8.361929\n107 GERMANY 1971 3.932104 -5.738020 -0.67176311  -8.283823\n108 GERMANY 1972 3.932402 -5.718750 -0.71797458  -8.237162\n109 GERMANY 1973 3.924156 -5.668169 -0.72587521  -8.199004\n110 GERMANY 1974 3.888212 -5.663964 -0.56982876  -8.182680\n111 GERMANY 1975 3.922029 -5.679057 -0.56482380  -8.147343\n112 GERMANY 1976 3.896469 -5.623841 -0.62481298 ",
        " -8.087061\n113 GERMANY 1977 3.895690 -5.594609 -0.59761210  -8.011102\n114 GERMANY 1978 3.883879 -5.561733 -0.62817279  -7.950079\n115  GREECE 1960 5.037406 -7.164861 -0.08354740 -12.173814\n116  GREECE 1961 5.381495 -7.073347 -0.10421997 -12.051684\n117  GREECE 1962 5.188072 -7.051422 -0.13320751 -11.906389\n118  GREECE 1963 5.083412 -6.982025 -0.15653576 -11.733713\n119  GREECE 1964 5.178627 -6.898713 -0.18051772 -11.550033\n120  GREECE 1965 5.015112 -6.822933 -0.07793999 -11.317051\n121  GREECE 1966 5.048396 -6.",
        "775097 -0.11491900 -11.156715\n122  GREECE 1967 4.975775 -6.732434 -0.13775849 -11.010858\n123  GREECE 1968 4.944160 -6.676809 -0.15375883 -10.847622\n124  GREECE 1969 4.894773 -6.591104 -0.17986997 -10.713848\n125  GREECE 1970 4.851824 -6.510271 -0.20252426 -10.564516\n126  GREECE 1971 4.811815 -6.437449 -0.06761078 -10.417716\n127  GREECE 1972 4.795709 -6.348042 -0.11973059 -10.286142\n128  GREECE 1973 4.768582 -6.281170 -0.05191029 -10.156498\n129  GREECE 1974 4.627807 -6.324581  0.31625351 -10.071675\n130  GREEC",
        "E 1975 4.580962 -6.271588  0.20631574  -9.933334\n131  GREECE 1976 4.479956 -6.224761  0.19319312  -9.776965\n132  GREECE 1977 4.484617 -6.203374  0.23502961  -9.615698\n133  GREECE 1978 4.546400 -6.151117  0.16896037  -9.574983\n134 IRELAND 1960 4.270421 -6.722466 -0.07648118  -9.698144\n135 IRELAND 1961 4.255239 -6.658166 -0.12040874  -9.604869\n136 IRELAND 1962 4.208435 -6.622812 -0.14160039  -9.502161\n137 IRELAND 1963 4.176696 -6.591172 -0.15232915  -9.409332\n138 IRELAND 1964 4.186243 -6.564281 -0.24428212  -",
        "9.314421\n139 IRELAND 1965 4.164896 -6.548303 -0.16899366  -9.219422\n140 IRELAND 1966 4.168214 -6.551963 -0.21071901  -9.170906\n141 IRELAND 1967 4.188990 -6.500483 -0.17383533  -9.114685\n142 IRELAND 1968 4.181120 -6.607963 -0.21339314  -9.017196\n143 IRELAND 1969 4.208613 -6.379743 -0.27162842  -8.947265\n144 IRELAND 1970 4.249945 -6.366517 -0.32069023  -8.918929\n145 IRELAND 1971 4.267118 -6.345441 -0.36041067  -8.871952\n146 IRELAND 1972 4.270768 -6.313571 -0.42393131  -8.823949\n147 IRELAND 1973 4.253827 -6.29",
        "6578 -0.64567297  -8.755768\n148 IRELAND 1974 4.325585 -6.286885 -0.55343875  -8.745203\n149 IRELAND 1975 4.248218 -6.301955 -0.64126416  -8.709478\n150 IRELAND 1976 4.221146 -6.287267 -0.66134256  -8.667224\n151 IRELAND 1977 4.241551 -6.251130 -0.56011483  -8.640727\n152 IRELAND 1978 4.198611 -6.193143 -0.66277808  -8.550991\n153   ITALY 1960 4.050728 -6.727487  0.16507708 -10.142098\n154   ITALY 1961 4.045248 -6.655348 -0.08559038  -9.932662\n155   ITALY 1962 4.028999 -6.599782 -0.18351291  -9.726695\n156   ITALY ",
        "1963 3.963086 -6.552672 -0.26541405  -9.478800\n157   ITALY 1964 3.936324 -6.629296 -0.42609643  -9.308466\n158   ITALY 1965 3.874985 -6.602189 -0.32712637  -9.158018\n159   ITALY 1966 3.822735 -6.449683 -0.24887418  -9.014813\n160   ITALY 1967 3.785808 -6.393500 -0.19160048  -8.883282\n161   ITALY 1968 3.763903 -6.334509 -0.20616656  -8.764197\n162   ITALY 1969 3.737389 -6.282857 -0.24756681  -8.666004\n163   ITALY 1970 3.706872 -6.240453 -0.23271512  -8.567338\n164   ITALY 1971 3.648205 -6.222602 -0.14822267  -8.",
        "470968\n165   ITALY 1972 3.629243 -6.205654 -0.21508857  -8.380176\n166   ITALY 1973 3.652263 -6.157297 -0.32508487  -8.316705\n [ reached 'max' / getOption(\"max.print\") -- omitted 176 rows ]\n",
        "> ",
        "Gasoline2[3,1] <- NA",
        "> ",
        "head(Gasoline2)",
        "  country year lgaspcar  lincomep      lrpmg  lcarpcap\n1 AUSTRIA 1960 4.173244 -6.474277 -0.3345476 -9.766840\n2 AUSTRIA 1961 4.100989 -6.426006 -0.3513276 -9.608622\n3    <NA> 1962 4.073177 -6.407308 -0.3795177 -9.457257\n4 AUSTRIA 1963 4.059509 -6.370679 -0.4142514 -9.343155\n5 AUSTRIA 1964 4.037689 -6.322247 -0.4453354 -9.237739\n6 AUSTRIA 1965 4.033983 -6.294668 -0.4970607 -9.123903\n",
        "> ",
        "class(Gasoline2)",
        "[1] \"data.frame\"\n",
        "> ",
        "Gasoline2 <- Gasoline",
        "> ",
        "Gasoline2[1,3] <- NA",
        "> ",
        "x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline2)",
        "> ",
        "print(x)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    Hypothesis  F-statistic   p-value  \n  1 ",
        "    H1       129.3652     < 0.001  \n  2     H2        26.9935     < 0.001  \n  3     H3        85.0870     < 0.001  \n",
        "> ",
        "Gasoline2",
        "    country year lgaspcar  lincomep       lrpmg   lcarpcap\n1   AUSTRIA 1960       NA -6.474277 -0.33454761  -9.766840\n2   AUSTRIA 1961 4.100989 -6.426006 -0.35132761  -9.608622\n3   AUSTRIA 1962 4.073177 -6.407308 -0.37951769  -9.457257\n4   AUSTRIA 1963 4.059509 -6.370679 -0.41425139  -9.343155\n5   AUSTRIA 1964 4.037689 -6.322247 -0.44533536  -9.237739\n6   AUSTRIA 1965 4.033983 -6.294668 -0.49706066  -9.123903\n7   AUSTRIA 1966 4.047537 -6.252545 -0.46683773  -9.019822\n8   AUSTRIA 1967 4.052911 -6.234581 -0.5",
        "0588340  -8.934403\n9   AUSTRIA 1968 4.045507 -6.206894 -0.52241255  -8.847967\n10  AUSTRIA 1969 4.046355 -6.153140 -0.55911051  -8.788686\n11  AUSTRIA 1970 4.080888 -6.081712 -0.59656122  -8.728200\n12  AUSTRIA 1971 4.106720 -6.043626 -0.65445914  -8.635898\n13  AUSTRIA 1972 4.128018 -5.981052 -0.59633184  -8.538338\n14  AUSTRIA 1973 4.199381 -5.895153 -0.59444681  -8.487289\n15  AUSTRIA 1974 4.018495 -5.852381 -0.46602693  -8.430404\n16  AUSTRIA 1975 4.029018 -5.869363 -0.45414221  -8.382815\n17  AUSTRIA 1976 3.98",
        "5412 -5.811703 -0.50008372  -8.322232\n18  AUSTRIA 1977 3.931676 -5.833288 -0.42191563  -8.249563\n19  AUSTRIA 1978 3.922750 -5.762023 -0.46960312  -8.211041\n20  BELGIUM 1960 4.164016 -6.215091 -0.16570961  -9.405527\n21  BELGIUM 1961 4.124356 -6.176843 -0.17173098  -9.303149\n22  BELGIUM 1962 4.075962 -6.129638 -0.22229138  -9.218070\n23  BELGIUM 1963 4.001266 -6.094019 -0.25046225  -9.114932\n24  BELGIUM 1964 3.994375 -6.036461 -0.27591057  -9.005491\n25  BELGIUM 1965 3.951531 -6.007252 -0.34493695  -8.862581\n26",
        "  BELGIUM 1966 3.820538 -5.994108 -0.23639770  -8.754527\n27  BELGIUM 1967 3.906878 -5.964812 -0.26699499  -8.748827\n28  BELGIUM 1968 3.828665 -5.924693 -0.31116076  -8.576513\n29  BELGIUM 1969 3.854601 -5.857532 -0.35480852  -8.521453\n30  BELGIUM 1970 3.870392 -5.797201 -0.37794044  -8.453043\n31  BELGIUM 1971 3.872245 -5.761050 -0.39922992  -8.409457\n32  BELGIUM 1972 3.905402 -5.710230 -0.31064584  -8.362588\n33  BELGIUM 1973 3.895996 -5.644145 -0.37309192  -8.314447\n34  BELGIUM 1974 3.818230 -5.600727 -0.362",
        "23563  -8.270595\n35  BELGIUM 1975 3.877778 -5.623003 -0.36430848  -8.228848\n36  BELGIUM 1976 3.864146 -5.567193 -0.37896584  -8.184134\n37  BELGIUM 1977 3.854311 -5.556697 -0.43164133  -8.138534\n38  BELGIUM 1978 3.842742 -5.532940 -0.59094964  -8.104741\n39   CANADA 1960 4.855238 -5.889713 -0.97210650  -8.378917\n40   CANADA 1961 4.826555 -5.884344 -0.97229024  -8.346729\n41   CANADA 1962 4.850533 -5.844552 -0.97860756  -8.320512\n42   CANADA 1963 4.838080 -5.792352 -1.01904791  -8.269422\n43   CANADA 1964 4.8397",
        "60 -5.760063 -1.00285696  -8.252404\n44   CANADA 1965 4.850828 -5.722822 -1.01712549  -8.223621\n45   CANADA 1966 4.871025 -5.671784 -1.01694436  -8.201236\n46   CANADA 1967 4.852499 -5.608481 -1.02359713  -8.156076\n47   CANADA 1968 4.868782 -5.573924 -1.01984524  -8.123188\n48   CANADA 1969 4.864433 -5.560853 -1.03686389  -8.095113\n49   CANADA 1970 4.899570 -5.514763 -1.06733308  -8.080028\n50   CANADA 1971 4.895075 -5.479919 -1.05803676  -8.039264\n51   CANADA 1972 4.889302 -5.436603 -1.09966703  -7.989531\n52  ",
        " CANADA 1973 4.899694 -5.414753 -1.13316142  -7.942140\n53   CANADA 1974 4.891591 -5.418456 -1.12379997  -7.900758\n54   CANADA 1975 4.888471 -5.379097 -1.18568427  -7.873313\n55   CANADA 1976 4.837359 -5.361285 -1.06179659  -7.808425\n56   CANADA 1977 4.810992 -5.336967 -1.07084448  -7.768793\n57   CANADA 1978 4.855846 -5.311272 -1.07495073  -7.788061\n58  DENMARK 1960 4.501986 -6.061726 -0.19570260  -9.326161\n59  DENMARK 1961 4.482846 -6.000897 -0.25361844  -9.193136\n60  DENMARK 1962 4.385449 -5.987477 -0.21875",
        "400  -9.047284\n61  DENMARK 1963 4.353997 -5.973060 -0.24800936  -8.952783\n62  DENMARK 1964 4.326436 -5.894741 -0.30654923  -8.852607\n63  DENMARK 1965 4.249454 -5.859356 -0.32701542  -8.761954\n64  DENMARK 1966 4.233643 -5.851866 -0.39618846  -8.681541\n65  DENMARK 1967 4.203466 -5.823064 -0.44257369  -8.602121\n66  DENMARK 1968 4.161687 -5.792260 -0.35204752  -8.533774\n67  DENMARK 1969 4.173561 -5.722769 -0.40687922  -8.470459\n68  DENMARK 1970 4.128807 -5.708307 -0.44046082  -8.427060\n69  DENMARK 1971 4.103146",
        " -5.676820 -0.45473954  -8.369399\n70  DENMARK 1972 4.082808 -5.645991 -0.49918863  -8.334673\n71  DENMARK 1973 4.137438 -5.595862 -0.43257185  -8.304602\n72  DENMARK 1974 4.000461 -5.594866 -0.42517720  -8.300177\n73  DENMARK 1975 4.033015 -5.612967 -0.39395431  -8.274632\n74  DENMARK 1976 4.007739 -5.553939 -0.35361534  -8.244087\n75  DENMARK 1977 4.005290 -5.538730 -0.35690917  -8.219858\n76  DENMARK 1978 4.036601 -5.483074 -0.29068135  -8.195805\n77   FRANCE 1960 3.907704 -6.264363 -0.01959833  -9.145706\n78   F",
        "RANCE 1961 3.885623 -6.220883 -0.02386000  -9.044253\n79   FRANCE 1962 3.823666 -6.173592 -0.06892022  -8.930133\n80   FRANCE 1963 3.788997 -6.137060 -0.13792900  -8.818632\n81   FRANCE 1964 3.767084 -6.087237 -0.19784646  -8.710965\n82   FRANCE 1965 3.760584 -6.048528 -0.23365325  -8.629390\n83   FRANCE 1966 3.749535 -6.000836 -0.26427164  -8.545771\n84   FRANCE 1967 3.768621 -5.955660 -0.29405795  -8.487370\n85   FRANCE 1968 3.778230 -5.901380 -0.32316179  -8.425551\n86   FRANCE 1969 3.773460 -5.840774 -0.3151908",
        "7  -8.369136\n87   FRANCE 1970 3.801583 -5.784181 -0.33384616  -8.327089\n88   FRANCE 1971 3.825962 -5.743144 -0.37945667  -8.279522\n89   FRANCE 1972 3.846677 -5.699107 -0.40781642  -8.222764\n90   FRANCE 1973 3.884994 -5.655065 -0.47503429  -8.183905\n91   FRANCE 1974 3.807995 -5.630096 -0.21698191  -8.160328\n92   FRANCE 1975 3.808549 -5.633271 -0.25838174  -8.145466\n93   FRANCE 1976 3.908116 -5.588335 -0.24651309  -8.110406\n94   FRANCE 1977 3.812500 -5.563418 -0.22550681  -8.064147\n95   FRANCE 1978 3.788883 -",
        "5.530247 -0.38075942  -8.005655\n96  GERMANY 1960 3.916953 -6.159837 -0.18591078  -9.342481\n97  GERMANY 1961 3.885345 -6.120923 -0.23095384  -9.183841\n98  GERMANY 1962 3.871484 -6.094258 -0.34384171  -9.037280\n99  GERMANY 1963 3.848782 -6.068361 -0.37464672  -8.913630\n100 GERMANY 1964 3.868993 -6.013442 -0.39965256  -8.811013\n101 GERMANY 1965 3.861049 -5.966469 -0.43987825  -8.711888\n102 GERMANY 1966 3.880741 -5.949068 -0.54000197  -8.631192\n103 GERMANY 1967 3.875032 -5.960041 -0.54998139  -8.576013\n104 GERM",
        "ANY 1968 3.889362 -5.883414 -0.43824222  -8.515865\n105 GERMANY 1969 3.899185 -5.829641 -0.58923137  -8.438061\n106 GERMANY 1970 3.902520 -5.767374 -0.63329520  -8.361929\n107 GERMANY 1971 3.932104 -5.738020 -0.67176311  -8.283823\n108 GERMANY 1972 3.932402 -5.718750 -0.71797458  -8.237162\n109 GERMANY 1973 3.924156 -5.668169 -0.72587521  -8.199004\n110 GERMANY 1974 3.888212 -5.663964 -0.56982876  -8.182680\n111 GERMANY 1975 3.922029 -5.679057 -0.56482380  -8.147343\n112 GERMANY 1976 3.896469 -5.623841 -0.62481298 ",
        " -8.087061\n113 GERMANY 1977 3.895690 -5.594609 -0.59761210  -8.011102\n114 GERMANY 1978 3.883879 -5.561733 -0.62817279  -7.950079\n115  GREECE 1960 5.037406 -7.164861 -0.08354740 -12.173814\n116  GREECE 1961 5.381495 -7.073347 -0.10421997 -12.051684\n117  GREECE 1962 5.188072 -7.051422 -0.13320751 -11.906389\n118  GREECE 1963 5.083412 -6.982025 -0.15653576 -11.733713\n119  GREECE 1964 5.178627 -6.898713 -0.18051772 -11.550033\n120  GREECE 1965 5.015112 -6.822933 -0.07793999 -11.317051\n121  GREECE 1966 5.048396 -6.",
        "775097 -0.11491900 -11.156715\n122  GREECE 1967 4.975775 -6.732434 -0.13775849 -11.010858\n123  GREECE 1968 4.944160 -6.676809 -0.15375883 -10.847622\n124  GREECE 1969 4.894773 -6.591104 -0.17986997 -10.713848\n125  GREECE 1970 4.851824 -6.510271 -0.20252426 -10.564516\n126  GREECE 1971 4.811815 -6.437449 -0.06761078 -10.417716\n127  GREECE 1972 4.795709 -6.348042 -0.11973059 -10.286142\n128  GREECE 1973 4.768582 -6.281170 -0.05191029 -10.156498\n129  GREECE 1974 4.627807 -6.324581  0.31625351 -10.071675\n130  GREEC",
        "E 1975 4.580962 -6.271588  0.20631574  -9.933334\n131  GREECE 1976 4.479956 -6.224761  0.19319312  -9.776965\n132  GREECE 1977 4.484617 -6.203374  0.23502961  -9.615698\n133  GREECE 1978 4.546400 -6.151117  0.16896037  -9.574983\n134 IRELAND 1960 4.270421 -6.722466 -0.07648118  -9.698144\n135 IRELAND 1961 4.255239 -6.658166 -0.12040874  -9.604869\n136 IRELAND 1962 4.208435 -6.622812 -0.14160039  -9.502161\n137 IRELAND 1963 4.176696 -6.591172 -0.15232915  -9.409332\n138 IRELAND 1964 4.186243 -6.564281 -0.24428212  -",
        "9.314421\n139 IRELAND 1965 4.164896 -6.548303 -0.16899366  -9.219422\n140 IRELAND 1966 4.168214 -6.551963 -0.21071901  -9.170906\n141 IRELAND 1967 4.188990 -6.500483 -0.17383533  -9.114685\n142 IRELAND 1968 4.181120 -6.607963 -0.21339314  -9.017196\n143 IRELAND 1969 4.208613 -6.379743 -0.27162842  -8.947265\n144 IRELAND 1970 4.249945 -6.366517 -0.32069023  -8.918929\n145 IRELAND 1971 4.267118 -6.345441 -0.36041067  -8.871952\n146 IRELAND 1972 4.270768 -6.313571 -0.42393131  -8.823949\n147 IRELAND 1973 4.253827 -6.29",
        "6578 -0.64567297  -8.755768\n148 IRELAND 1974 4.325585 -6.286885 -0.55343875  -8.745203\n149 IRELAND 1975 4.248218 -6.301955 -0.64126416  -8.709478\n150 IRELAND 1976 4.221146 -6.287267 -0.66134256  -8.667224\n151 IRELAND 1977 4.241551 -6.251130 -0.56011483  -8.640727\n152 IRELAND 1978 4.198611 -6.193143 -0.66277808  -8.550991\n153   ITALY 1960 4.050728 -6.727487  0.16507708 -10.142098\n154   ITALY 1961 4.045248 -6.655348 -0.08559038  -9.932662\n155   ITALY 1962 4.028999 -6.599782 -0.18351291  -9.726695\n156   ITALY ",
        "1963 3.963086 -6.552672 -0.26541405  -9.478800\n157   ITALY 1964 3.936324 -6.629296 -0.42609643  -9.308466\n158   ITALY 1965 3.874985 -6.602189 -0.32712637  -9.158018\n159   ITALY 1966 3.822735 -6.449683 -0.24887418  -9.014813\n160   ITALY 1967 3.785808 -6.393500 -0.19160048  -8.883282\n161   ITALY 1968 3.763903 -6.334509 -0.20616656  -8.764197\n162   ITALY 1969 3.737389 -6.282857 -0.24756681  -8.666004\n163   ITALY 1970 3.706872 -6.240453 -0.23271512  -8.567338\n164   ITALY 1971 3.648205 -6.222602 -0.14822267  -8.",
        "470968\n165   ITALY 1972 3.629243 -6.205654 -0.21508857  -8.380176\n166   ITALY 1973 3.652263 -6.157297 -0.32508487  -8.316705\n [ reached 'max' / getOption(\"max.print\") -- omitted 176 rows ]\n",
        "> ",
        "plm(log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1) +",
        "+ ",
        "         lag(log(capital), 0:2) + lag(log(output), 0:2) | lag(log(emp), 2:99),",
        "+ ",
        "     data = EmplUK, effect = \"twoways\", model = \"twosteps\")",
        "Error in match.arg(model) : \n  'arg' should be one of “within”, “random”, “ht”, “between”, “pooling”, “fd”\n",
        "> ",
        "am <- plm(lwage ~ wks + south + smsa + married + exp + I(exp ^ 2) + ",
        "+ ",
        "              bluecol + ind + union + sex + black + ed |",
        "+ ",
        "              bluecol + south + smsa + ind + sex + black |",
        "+ ",
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages, index = 595,",
        "+ ",
        "          random.method = \"ht\", model = \"random\", inst.method = \"am\")",
        "> ",
        "summary(am)",
        "Oneway (individual) effect Random Effect Model \n   (Hausman-Taylor's transformation)\nInstrumental variable estimation\n   (Amemiya-MaCurdy's transformation)\n\nCall:\nplm(formula = lwage ~ wks + south + smsa + married + exp + I(exp^2) + \n    bluecol + ind + union + sex + black + ed | bluecol + south + \n    smsa + ind + sex + black | wks + married + union + exp + \n    I(exp^2), data = Wages, model = \"random\", random.method = \"ht\", \n    inst.method = \"am\", index = 595)\n\nBalanced Panel: n = 595, T = 7, N = 4165\n\nE",
        "ffects:\n                  var std.dev share\nidiosyncratic 0.02304 0.15180 0.025\nindividual    0.88699 0.94180 0.975\ntheta: 0.9392\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-12.643192  -0.464811   0.043216   0.523598  13.338789 \n\nCoefficients:\n               Estimate  Std. Error z-value  Pr(>|z|)    \n(Intercept)  2.9273e+00  2.7513e-01 10.6399 < 2.2e-16 ***\nwks          8.3806e-04  5.9945e-04  1.3980   0.16210    \nsouthyes     7.2818e-03  3.1936e-02  0.2280   0.81964    \nsmsayes    ",
        " -4.1951e-02  1.8947e-02 -2.2141   0.02682 *  \nmarriedyes  -3.0089e-02  1.8967e-02 -1.5864   0.11266    \nexp          1.1297e-01  2.4688e-03 45.7584 < 2.2e-16 ***\nI(exp^2)    -4.2140e-04  5.4554e-05 -7.7244 1.124e-14 ***\nbluecolyes  -2.0850e-02  1.3765e-02 -1.5147   0.12986    \nind          1.3629e-02  1.5229e-02  0.8949   0.37082    \nunionyes     3.2475e-02  1.4894e-02  2.1804   0.02922 *  \nsexfemale   -1.3201e-01  1.2660e-01 -1.0427   0.29709    \nblackyes    -2.8590e-01  1.5549e-01 -1.8388   0.06595 .  \ne",
        "d           1.3720e-01  2.0570e-02  6.6703 2.553e-11 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nTotal Sum of Squares:    243.04\nResidual Sum of Squares: 4160.3\nR-Squared:      0.60948\nAdj. R-Squared: 0.60835\nChisq: 6879.2 on 12 DF, p-value: < 2.22e-16\n",
        "> ",
        "am <- plm(lwage ~ wks + south + smsa + married + exp + I(exp ^ 2) + ",
        "+ ",
        "              bluecol + ind + union + sex + black + ed |",
        "+ ",
        "              bluecol + south + smsa + ind + sex + black |",
        "+ ",
        "              wks + married + union + exp + I(exp ^ 2), ",
        "+ ",
        "          data = Wages, index = 595,",
        "+ ",
        "           model = \"pooling\")",
        "Error in plm.fit(data, model, effect, random.method, random.models, random.dfcor,  : \n  insufficient number of instruments\n",
        "> ",
        "?deviance",
        "> ",
        "?pf",
        "\nRestarting R session...\n\n",
        "> ",
        "dataset <- read.table(\"C://Users//Administrator//Desktop//hsiao//hsiao//hsiao.txt\",",
        "+ ",
        "                      sep=\"\\t\", header = TRUE, dec = \",\")",
        "> ",
        "x <- hsiao(dca ~ flr, pdata.frame(dataset, index=c(\"unit\", \"year\")))",
        "> ",
        "x",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: dca ~ flr\n\n    Hypothesis  F-statistic   p-value  \n  1     H1        1.1457      0.3",
        "5174  \n  2     H2        0.8017      0.59070  \n  3     H3        1.5350      0.17889  \n\nRestarting R session...\n\n",
        "> ",
        "devtools::test()",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m No testing infrastructure found.\u001B[39m\n\u001B[38;5;232mCreate it?\u001B[39m\n\n1: Nope\n2: Yes\n3: Not yet\n\n",
        "Selection: ",
        "2",
        "\u001B[32m✔\u001B[39m Setting active project to \u001B[34m\"C:/Users/Administrator/Documents/packages/poobly\"\u001B[39m.\n\u001B[32m✔\u001B[39m Creating \u001B]8;;file://C:/Users/Administrator/Documents/packages/poobly/tests/testthat\u0007\u001B[34mtests/testthat/\u001B[39m\u001B]8;;\u0007.\n\u001B[32m✔\u001B[39m Writing \u001B]8;;file://C:/Users/Administrator/Documents/packages/poobly/tests/testthat.R\u0007\u001B[34mtests/testthat.R\u001B[39m\u001B]8;;\u0007.\n\u001B[31m☐\u001B[39m Call \u001B]8;;ide:run:usethis::use_test()\u0007usethis::use_test()\u001B]8;;\u0007 to initialize a basic test file and open it for editing.\n\u001B[32m✔\u001B",
        "[39m Setting active project to \u001B[34m\"<no active project>\"\u001B[39m.\n\nRestarting R session...\n\n",
        "\nRestarting R session...\n\n",
        "> ",
        "  library(poobly)",
        "> ",
        "> ",
        "  data(\"Gasoline\", package = \"plm\")",
        "> ",
        "  x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "  x$F.statistic",
        "[1] 129.31658  27.33519  83.96080\n",
        "> ",
        "  print(x$F.statistic, digits=13)",
        "[1] 129.31657890237  27.33518626557  83.96079848539\n",
        "> ",
        "  x$F.statistic ==  c(129.31657890237, 27.33518626557, 83.96079848539)",
        "[1] FALSE FALSE FALSE\n",
        "> ",
        "  print(x$F.statistic, digits=16)",
        "[1] 129.31657890236869  27.33518626557463  83.96079848539456\n",
        "> ",
        "  x$F.statistic ==  c(129.31657890236869, 27.33518626557463, 83.96079848539456)",
        "[1]  TRUE FALSE  TRUE\n",
        "> ",
        "  print(x$F.statistic, digits=17)",
        "[1] 129.316578902368690  27.335186265574634  83.960798485394562\n",
        "> ",
        "  x$F.statistic ==  c(129.316578902368690, 27.335186265574634, 83.960798485394562)",
        "[1] TRUE TRUE TRUE\n",
        "> ",
        "  x$p.value",
        "[1] 4.006194e-172  1.440452e-80 4.735764e-107\n",
        "> ",
        "  x$p.value == c(4.006194e-172, 1.440452e-80, 4.735764e-107)",
        "[1] FALSE FALSE FALSE\n",
        "> ",
        "round(x$p.value, 5)",
        "[1] 0 0 0\n",
        "> ",
        "round(x$F.statistic, 5)",
        "[1] 129.31658  27.33519  83.96080\n",
        "> ",
        "  round(x$F.statistic, 5) ==  c(129.31658, 27.33519, 83.96080)",
        "[1] TRUE TRUE TRUE\n",
        "> ",
        "  round(x$p.value, 5) == c(0, 0, 0)",
        "[1] TRUE TRUE TRUE\n",
        "> ",
        "  x$Hypothesis",
        "[1] \"H1\" \"H2\" \"H3\"\n",
        "> ",
        "x$formula",
        "lgaspcar ~ lincomep + lrpmg + lcarpcap\n",
        "> ",
        "lgaspcar ~ lincomep + lrpmg + lcarpcap",
        "lgaspcar ~ lincomep + lrpmg + lcarpcap\n",
        "> ",
        "all.equal(x$formula, lgaspcar ~ lincomep + lrpmg + lcarpcap)",
        "[1] TRUE\n",
        "> ",
        "  x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "             pdata.frame(Gasoline))",
        "Error in pdata.frame(Gasoline) : could not find function \"pdata.frame\"\n",
        "> ",
        "  library(plm)",
        "> ",
        "  x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "             pdata.frame(Gasoline))",
        "> ",
        "round(x$F.statistic, 5)",
        "[1] 129.31658  27.33519  83.96080\n",
        "> ",
        "names(Gasoline)",
        "[1] \"country\"  \"year\"     \"lgaspcar\" \"lincomep\" \"lrpmg\"    \"lcarpcap\"\n",
        "> ",
        "  library(poobly)",
        "> ",
        "  library(plm)",
        "> ",
        "> ",
        "  data(\"Gasoline\", package = \"plm\")",
        "> ",
        " hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             model=\"pooling\")",
        "Error in plm(formula, x, model = \"pooling\", ...) : \n  formal argument \"model\" matched by multiple actual arguments\n",
        "> ",
        "  tryerror <- try(x <- hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             model=\"pooling\"),",
        "+ ",
        "                  silent = TRUE)",
        "> ",
        "class(tryerror)",
        "[1] \"try-error\"\n",
        "> ",
        "tryerror[[1]]$message",
        "Error in tryerror[[1]]$message : $ operator is invalid for atomic vectors\n",
        "> ",
        "tryerror[[1]]",
        "[1] \"Error in plm(formula, x, model = \\\"pooling\\\", ...) : \\n  formal argument \\\"model\\\" matched by multiple actual arguments\\n\"\n",
        "> ",
        "hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             \"pooling\")",
        "Error in pdata.frame(data, index = index) : \n  variable 'pooling' does not exist (individual index)\n",
        "> ",
        "hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             model=\"pooling\")",
        "Error in plm(formula, x, model = \"pooling\", ...) : \n  formal argument \"model\" matched by multiple actual arguments\n",
        "> ",
        "hsiao",
        "function(formula, data, index = NULL, ...){\n\n  names_ellipsis <- names(list(...))\n\n  if (\"method\" %in% names_ellipsis){\n    stop(\"Remove 'method' arguement.\")\n  }\n\n  if (\"effect\" %in% names_ellipsis){\n    stop(\"Remove 'effect' arguement.\")\n  }\n\n  if (!is(data, \"pdata.frame\") && is.data.frame(data)){\n    if (is.null(index)){\n      data <- pdata.frame(data)\n    } else {\n      data <- pdata.frame(data, index = index)\n    }\n  }\n\n  pdims <- pdim(data)\n  N     <- pdims$nT$n\n  T     <- pdims$nT$T\n\n  RSS_indi <- su",
        "m(by(data, plm::index(data)[,1],\n                     function(x) deviance(plm(formula, x, model = \"pooling\",\n                                              ...))))\n\n  zz_pooling <- plm(formula, data, model = \"pooling\", ...)\n\n  RSS_pool <- deviance(zz_pooling)\n\n  cf <- coef(zz_pooling)\n  K  <- length(cf[names(cf) != \"(Intercept)\"])\n\n  zz_within <- plm(formula, data, model = \"within\", ...)\n\n  RSS_with <- deviance(zz_within)\n\n  F_statistic <- c(\n    ((RSS_pool - RSS_indi) * (N * (T-(K+1)))) / (RSS_indi * (N-1)",
        " * (K+1)),\n    ((RSS_with - RSS_indi) * (N * (T-(K+1)))) / (RSS_indi * (N-1) * K),\n    ((RSS_pool - RSS_with) * (N * (T-1) - K)) / (RSS_with * (N-1))\n  )\n\n  res <-\n    list(\n      \"Hypothesis\"  = c(\"H1\", \"H2\", \"H3\"),\n      \"F.statistic\" = F_statistic,\n      \"p.value\"     = c(\n        pf(F_statistic[1], (K+1) * (N-1), (N*(T-(K+1))), lower.tail = FALSE),\n        pf(F_statistic[2], K*(N-1),       (N*T-N*(K+1)), lower.tail = FALSE),\n        pf(F_statistic[3], (N-1),         (N*(T-1)-K),   lower.tail = FALSE)\n  ",
        "    ),\n      \"formula\"     = formula\n    )\n\n  class(res) <- c(\"hsiao\", 'list')\n\n  return(res)\n\n}\n<bytecode: 0x0000018c6400b3a0>\n<environment: namespace:poobly>\n",
        "> ",
        "  hsiao2 <- function(formula, data, index = NULL, ...){",
        "+ ",
        "    ",
        "+ ",
        "    names_ellipsis <- names(list(...))}",
        "> ",
        "  hsiao2 <- function(formula, data, index = NULL, ...){",
        "+ ",
        "    ",
        "+ ",
        "    names_ellipsis <- names(list(...))",
        "+ ",
        "    print(names_ellipsis)}",
        "> ",
        "  hsiao2(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "        data=Gasoline,",
        "+ ",
        "        model=\"pooling\")",
        "[1] \"model\"\n",
        "> ",
        "  hsiao2 <- function(formula, data, index = NULL, ...){",
        "+ ",
        "    ",
        "+ ",
        "    names_ellipsis <- names(list(...))",
        "+ ",
        "    print(\"model\" %in% names_ellipsis)}",
        "> ",
        "  hsiao2(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "        data=Gasoline,",
        "+ ",
        "        model=\"pooling\")",
        "[1] TRUE\n",
        "> ",
        "hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             model=\"pooling\")",
        "Error in plm(formula, x, model = \"pooling\", ...) : \n  formal argument \"model\" matched by multiple actual arguments\n",
        "> ",
        "  hsiao2 <- function(formula, data, index = NULL, ...){",
        "+ ",
        "+ ",
        "    names_ellipsis <- names(list(...))",
        "+ ",
        "    print(\"model\" %in% names_ellipsis)",
        "+ ",
        "  }",
        "> ",
        "  hsiao2(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "        data=Gasoline,",
        "+ ",
        "        model=\"pooling\")",
        "[1] TRUE\n",
        "> ",
        "  hsiao2(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "        data=Gasoline,",
        "+ ",
        "        model=\"pooling\")",
        "[1] TRUE\n",
        "> ",
        "hsiao",
        "function(formula, data, index = NULL, ...){\n\n  names_ellipsis <- names(list(...))\n\n  if (\"method\" %in% names_ellipsis){\n    stop(\"Remove 'method' arguement.\")\n  }\n\n  if (\"effect\" %in% names_ellipsis){\n    stop(\"Remove 'effect' arguement.\")\n  }\n\n  if (!is(data, \"pdata.frame\") && is.data.frame(data)){\n    if (is.null(index)){\n      data <- pdata.frame(data)\n    } else {\n      data <- pdata.frame(data, index = index)\n    }\n  }\n\n  pdims <- pdim(data)\n  N     <- pdims$nT$n\n  T     <- pdims$nT$T\n\n  RSS_indi <- su",
        "m(by(data, plm::index(data)[,1],\n                     function(x) deviance(plm(formula, x, model = \"pooling\",\n                                              ...))))\n\n  zz_pooling <- plm(formula, data, model = \"pooling\", ...)\n\n  RSS_pool <- deviance(zz_pooling)\n\n  cf <- coef(zz_pooling)\n  K  <- length(cf[names(cf) != \"(Intercept)\"])\n\n  zz_within <- plm(formula, data, model = \"within\", ...)\n\n  RSS_with <- deviance(zz_within)\n\n  F_statistic <- c(\n    ((RSS_pool - RSS_indi) * (N * (T-(K+1)))) / (RSS_indi * (N-1)",
        " * (K+1)),\n    ((RSS_with - RSS_indi) * (N * (T-(K+1)))) / (RSS_indi * (N-1) * K),\n    ((RSS_pool - RSS_with) * (N * (T-1) - K)) / (RSS_with * (N-1))\n  )\n\n  res <-\n    list(\n      \"Hypothesis\"  = c(\"H1\", \"H2\", \"H3\"),\n      \"F.statistic\" = F_statistic,\n      \"p.value\"     = c(\n        pf(F_statistic[1], (K+1) * (N-1), (N*(T-(K+1))), lower.tail = FALSE),\n        pf(F_statistic[2], K*(N-1),       (N*T-N*(K+1)), lower.tail = FALSE),\n        pf(F_statistic[3], (N-1),         (N*(T-1)-K),   lower.tail = FALSE)\n  ",
        "    ),\n      \"formula\"     = formula\n    )\n\n  class(res) <- c(\"hsiao\", 'list')\n\n  return(res)\n\n}\n<bytecode: 0x0000018c6400b3a0>\n<environment: namespace:poobly>\n\nRestarting R session...\n\n",
        "> ",
        "  library(poobly)",
        "> ",
        "  library(plm)",
        "> ",
        "> ",
        "  data(\"Gasoline\", package = \"plm\")",
        "> ",
        "hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             model=\"pooling\")",
        "Error in hsiao(formula = lgaspcar ~ lincomep + lrpmg + lcarpcap, data = Gasoline,  : \n  Remove 'model' arguement.\n",
        "> ",
        "tryerror[[1]]$message",
        "Error: object 'tryerror' not found\n",
        "> ",
        "  tryerror <- try(x <- hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             model=\"pooling\"),",
        "+ ",
        "                  silent = TRUE)",
        "> ",
        "tryerror[[1]]$message",
        "Error in tryerror[[1]]$message : $ operator is invalid for atomic vectors\n",
        "> ",
        "tryerror[[1]]",
        "[1] \"Error in hsiao(formula = lgaspcar ~ lincomep + lrpmg + lcarpcap, data = Gasoline,  : \\n  Remove 'model' arguement.\\n\"\n",
        "> ",
        "all.equal(",
        "+ ",
        "    tryerror[[1]],",
        "+ ",
        "    paste0(\"Error in hsiao(formula = lgaspcar ~ lincomep + lrpmg +\",",
        "+ ",
        "           \" lcarpcap, data = Gasoline,  : \\n  Remove 'model' arguement.\\n\"))",
        "[1] TRUE\n",
        "> ",
        "  tryerror <- try(x <- hsiao(formula=lgaspcar ~ lincomep + lrpmg + lcarpcap,",
        "+ ",
        "                             data=Gasoline,",
        "+ ",
        "                             effect=\"individual\"),",
        "+ ",
        "                  silent = TRUE)",
        "> ",
        " tryerror[[1]]",
        "[1] \"Error in hsiao(formula = lgaspcar ~ lincomep + lrpmg + lcarpcap, data = Gasoline,  : \\n  Remove 'effect' arguement.\\n\"\n",
        "> ",
        "  x <- hsiao(lgaspcar ~ lincomep + lrpmg + lcarpcap, Gasoline)",
        "> ",
        "print(x)",
        "   \n                  Hsiao Homogeneity Test\n\nHypothesis| Null |                Alternative                \n----------+------+-------------------------------------------\n    H1    |Pooled|                    H2                     \n    H2    |  H3  |      Heterogeneous intercept & slope      \n    H3    |Pooled|Heterogeneous intercept & Homogeneous slope\n=============================================================\n\nformula: lgaspcar ~ lincomep + lrpmg + lcarpcap\n\n    Hypothesis  F-statistic   p-value  \n  1 ",
        "    H1       129.3166     < 0.001  \n  2     H2        27.3352     < 0.001  \n  3     H3        83.9608     < 0.001  \n\nRestarting R session...\n\n",
        "> ",
        "covr::report()",
        "> ",
        "git init",
        "Error: unexpected symbol in \"git init\"\n",
        "\nRestarting R session...\n\n"
    ]
}